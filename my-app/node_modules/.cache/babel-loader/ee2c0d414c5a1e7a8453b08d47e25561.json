{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactMUI\\\\reactMUI\\\\my-app\\\\src\\\\Components\\\\FormUpload.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AttachFile from '@material-ui/icons/AttachFile';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Description from '@material-ui/icons/Description';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(0)\n    }\n  },\n  input: {\n    display: 'none'\n  },\n  circle: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\nexport default function UploadButtons(props) {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(0);\n  const [file, setFile] = React.useState(null);\n  const [upload, setUpload] = React.useState(null);\n  const [loaded, setloaded] = React.useState(0);\n\n  const chooseFile = e => {\n    // console.warn(e.target.files);\n    let file = e.target.files;\n    setUpload(file[0]); // click();\n  };\n\n  React.useEffect(() => {\n    function tick() {\n      // reset when reaching 100%\n      setProgress(oldProgress => oldProgress >= 100 ? 0 : oldProgress + 1);\n    }\n\n    const timer = setInterval(tick, 20);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  const click = e => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append('file', upload);\n    console.log(data);\n    axios.post('http://localhost:8000/upload', data, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      setFile(res.data.filename);\n      console.log(res.data.filename);\n      props.updateFile(res.data.filename);\n    });\n    return false;\n  };\n\n  const click2 = () => {\n    const data = new FormData();\n    data.append('file', upload); // console.log(data);\n\n    setFile('dhdjdjh');\n    axios.post('http://localhost:8000/upload', data, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      setFile(res.data.filename);\n      console.log(res.data.filename);\n      props.updateFile(res.data.filename); // res.send({ result: true });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"contained-button-file\",\n    multiple: true // type='file'\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    component: \"span\",\n    onClick: click2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Upload\")), /*#__PURE__*/React.createElement(\"input\", {\n    // accept='*.pdf'\n    className: classes.input,\n    id: \"icon-button-file\",\n    type: \"file\",\n    onChange: e => {\n      chooseFile(e);\n    } // accept='image/*'\n    ,\n    accept: \"application/pdf\",\n    name: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"icon-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.circle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    variant: \"determinate\",\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CircularProgress, {\n    variant: \"determinate\",\n    value: progress,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["D:/reactMUI/reactMUI/my-app/src/Components/FormUpload.js"],"names":["React","makeStyles","Grid","Button","IconButton","AttachFile","CircularProgress","Description","axios","useStyles","theme","root","margin","spacing","input","display","circle","marginLeft","UploadButtons","props","classes","progress","setProgress","useState","file","setFile","upload","setUpload","loaded","setloaded","chooseFile","e","target","files","useEffect","tick","oldProgress","timer","setInterval","clearInterval","click","preventDefault","data","FormData","append","console","log","post","then","res","filename","updateFile","click2"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AttachFile from '@material-ui/icons/AttachFile';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Description from '@material-ui/icons/Description';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(0),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  circle: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function UploadButtons(props) {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [file, setFile] = React.useState(null);\r\n  const [upload, setUpload] = React.useState(null);\r\n  const [loaded, setloaded] = React.useState(0);\r\n  const chooseFile = (e) => {\r\n    // console.warn(e.target.files);\r\n    let file = e.target.files;\r\n    setUpload(file[0]);\r\n    // click();\r\n  };\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      // reset when reaching 100%\r\n      setProgress((oldProgress) => (oldProgress >= 100 ? 0 : oldProgress + 1));\r\n    }\r\n\r\n    const timer = setInterval(tick, 20);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  const click = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append('file', upload);\r\n    console.log(data);\r\n    axios\r\n      .post('http://localhost:8000/upload', data, {\r\n        // receive two    parameter endpoint url ,form data\r\n      })\r\n      .then((res) => {\r\n        // then print response status\r\n\r\n        setFile(res.data.filename);\r\n        console.log(res.data.filename);\r\n        props.updateFile(res.data.filename);\r\n      });\r\n    return false;\r\n  };\r\n\r\n  const click2 = () => {\r\n    const data = new FormData();\r\n    data.append('file', upload);\r\n    // console.log(data);\r\n    setFile('dhdjdjh');\r\n\r\n    axios\r\n      .post('http://localhost:8000/upload', data, {\r\n        // receive two    parameter endpoint url ,form data\r\n      })\r\n      .then((res) => {\r\n        // then print response status\r\n\r\n        setFile(res.data.filename);\r\n        console.log(res.data.filename);\r\n        props.updateFile(res.data.filename);\r\n        // res.send({ result: true });\r\n      });\r\n  };\r\n  return (\r\n    <Grid item xs={4}>\r\n      <input\r\n        accept='image/*'\r\n        className={classes.input}\r\n        id='contained-button-file'\r\n        multiple\r\n        // type='file'\r\n      />\r\n      <label htmlFor='contained-button-file'>\r\n        <Button\r\n          variant='contained'\r\n          color='primary'\r\n          component='span'\r\n          onClick={click2}\r\n        >\r\n          Upload\r\n        </Button>\r\n        {/* <button\r\n          type='button'\r\n          // onClick={e => {\r\n          //   click(e);\r\n          //   return false;\r\n          // }}\r\n          onClick={click2}\r\n        >\r\n          Upload\r\n        </button>\r\n        <input type='button' onClick={click2} value='Click Me'></input> */}\r\n      </label>\r\n      <input\r\n        // accept='*.pdf'\r\n        className={classes.input}\r\n        id='icon-button-file'\r\n        type='file'\r\n        onChange={(e) => {\r\n          chooseFile(e);\r\n        }}\r\n        // accept='image/*'\r\n\r\n        accept='application/pdf'\r\n        name='file'\r\n      />\r\n      <label htmlFor='icon-button-file'>\r\n        <IconButton\r\n          color='primary'\r\n          aria-label='upload picture'\r\n          component='span'\r\n        >\r\n          <Description />\r\n        </IconButton>\r\n        <div className={classes.circle}>\r\n          <CircularProgress variant='determinate' value={progress} />\r\n          <CircularProgress\r\n            variant='determinate'\r\n            value={progress}\r\n            color='secondary'\r\n          />\r\n        </div>\r\n      </label>\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}