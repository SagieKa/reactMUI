{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactMUI\\\\reactMUI\\\\my-app\\\\src\\\\Components\\\\DisplayTable.js\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport MaterialTable from 'material-table';\n\nconst db = require('./DB');\n\nexport default function MaterialTableDemo(props) {\n  var dataDb = [];\n  const [state, setState] = React.useState({\n    columns: db.columns,\n    data: dataDb\n  });\n  let requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  let requestOptionsPost = {\n    method: 'Post',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  useEffect(() => {\n    fetch('http://localhost:8000/getData', requestOptions).then(res => {\n      return res.json();\n    }).then(data => {\n      dataDb = data.result;\n      setState({\n        columns: db.columns,\n        data: dataDb.reverse()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    console.log('hi i am in useafeect-table you change the props?');\n    var arr = [...props.updateArr];\n    arr.push(...state.data);\n    setState({\n      columns: db.columns,\n      data: arr\n    });\n  }, [props.updateArr]);\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    style: {\n      borderRadius: '25px',\n      padding: '20px',\n      boxShadow: ' 0 4px 90px 0 rgba(0, 0, 0, 0.2)'\n    },\n    icons: {\n      Add: props => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-plus\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }\n        }), \" add cheack\");\n      }\n    },\n    localization: {\n      pagination: {\n        labelDisplayedRows: '{count} of {to}-{from} '\n      }\n    },\n    title: \"Transactions\",\n    columns: state.columns,\n    data: state.data,\n    options: {\n      actionsColumnIndex: -1,\n      rowStyle: rowData => {\n        if (rowData.type === 'Add') {\n          return {\n            background: ' linear-gradient(90deg, rgba(190,255,224,1) 31%, rgba(250,255,253,0.7987570028011204) 100%)'\n          };\n        }\n\n        if (rowData.type === 'Minus') {\n          return {\n            background: 'linear-gradient( 89.5deg,  rgba(246,114,128,1) 0.2%, rgba(248,177,149,1) 90.6% )'\n          };\n        }\n\n        return {};\n      }\n    },\n    actions: [{\n      icon: 'save_alt',\n      tooltip: 'Download File',\n      // onclick=\"window.location.href = 'https://w3docs.com';\"\n      onClick: (event, rowData) => {\n        alert('You download ' + rowData.file);\n        window.open('http://localhost:8000/downloadFile'); // fetch('http://localhost:8000/downloadFile', {\n        //   method: 'GET',\n        //   headers: { 'Content-Type': 'application/json' },\n        //   // body: JSON.stringify({ file: rowData.file }),\n        // });\n      }\n    }],\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["D:/reactMUI/reactMUI/my-app/src/Components/DisplayTable.js"],"names":["React","useEffect","MaterialTable","db","require","MaterialTableDemo","props","dataDb","state","setState","useState","columns","data","requestOptions","method","headers","requestOptionsPost","fetch","then","res","json","result","reverse","console","log","arr","updateArr","push","borderRadius","padding","boxShadow","Add","pagination","labelDisplayedRows","actionsColumnIndex","rowStyle","rowData","type","background","icon","tooltip","onClick","event","alert","file","window","open","onRowAdd","newData","Promise","resolve","setTimeout","prevState","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nconst db = require('./DB');\r\n\r\nexport default function MaterialTableDemo(props) {\r\n  var dataDb = [];\r\n  const [state, setState] = React.useState({\r\n    columns: db.columns,\r\n    data: dataDb,\r\n  });\r\n  let requestOptions = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n  let requestOptionsPost = {\r\n    method: 'Post',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/getData', requestOptions)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        dataDb = data.result;\r\n        setState({ columns: db.columns, data: dataDb.reverse() });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('hi i am in useafeect-table you change the props?');\r\n    var arr = [...props.updateArr];\r\n    arr.push(...state.data);\r\n    setState({ columns: db.columns, data: arr });\r\n  }, [props.updateArr]);\r\n\r\n  return (\r\n    <MaterialTable\r\n      style={{\r\n        borderRadius: '25px',\r\n        padding: '20px',\r\n        boxShadow: ' 0 4px 90px 0 rgba(0, 0, 0, 0.2)',\r\n      }}\r\n      icons={{\r\n        Add: (props) => {\r\n          return (\r\n            <div>\r\n              <i className='fa fa-plus'></i> add cheack\r\n            </div>\r\n          );\r\n        },\r\n      }}\r\n      localization={{\r\n        pagination: {\r\n          labelDisplayedRows: '{count} of {to}-{from} ',\r\n        },\r\n      }}\r\n      title='Transactions'\r\n      columns={state.columns}\r\n      data={state.data}\r\n      options={{\r\n        actionsColumnIndex: -1,\r\n\r\n        rowStyle: (rowData) => {\r\n          if (rowData.type === 'Add') {\r\n            return {\r\n              background:\r\n                ' linear-gradient(90deg, rgba(190,255,224,1) 31%, rgba(250,255,253,0.7987570028011204) 100%)',\r\n            };\r\n          }\r\n          if (rowData.type === 'Minus') {\r\n            return {\r\n              background:\r\n                'linear-gradient( 89.5deg,  rgba(246,114,128,1) 0.2%, rgba(248,177,149,1) 90.6% )',\r\n            };\r\n          }\r\n\r\n          return {};\r\n        },\r\n      }}\r\n      actions={[\r\n        {\r\n          icon: 'save_alt',\r\n          tooltip: 'Download File',\r\n          // onclick=\"window.location.href = 'https://w3docs.com';\"\r\n          onClick: (event, rowData) => {\r\n            alert('You download ' + rowData.file);\r\n            window.open('http://localhost:8000/downloadFile');\r\n            // fetch('http://localhost:8000/downloadFile', {\r\n            //   method: 'GET',\r\n            //   headers: { 'Content-Type': 'application/json' },\r\n            //   // body: JSON.stringify({ file: rowData.file }),\r\n            // });\r\n          },\r\n        },\r\n      ]}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}