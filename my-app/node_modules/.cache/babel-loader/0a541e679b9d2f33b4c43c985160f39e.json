{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactMUI\\\\reactMUI\\\\my-app\\\\src\\\\Components\\\\DisplayTable.js\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport MaterialTable from 'material-table';\n\nconst db = require('./DB');\n\nexport default function MaterialTableDemo(props) {\n  var dataDb = [];\n  var sumAdd = 0;\n  var sumMinus = 0;\n  var sumTotal = 0;\n  const [state, setState] = React.useState({\n    columns: db.columns,\n    data: dataDb\n  });\n  let requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  let requestOptionsPost = {\n    method: 'Post',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  useEffect(() => {\n    fetch('http://localhost:8000/getData', requestOptions).then(res => {\n      return res.json();\n    }).then(data => {\n      dataDb = data.result;\n      console.log(dataDb);\n      dataDb.map(x => {\n        if (x.type === 'Add') sumAdd += x.amount;\n        if (x.type === 'Minus') sumMinus += x.amount;\n      });\n      console.log(sumAdd);\n      console.log(sumMinus);\n      setState({\n        columns: db.columns,\n        data: dataDb.reverse()\n      });\n    });\n  }, []);\n  useEffect(() => {\n    console.log('hi i am in useafeect-table you change the props?');\n    var arr = [...props.updateArr];\n    arr.push(...state.data);\n    setState({\n      columns: db.columns,\n      data: arr\n    });\n  }, [props.updateArr]);\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    style: {\n      borderRadius: '25px',\n      padding: '20px',\n      boxShadow: ' 0 4px 90px 0 rgba(0, 0, 0, 0.2)'\n    },\n    icons: {\n      Add: props => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-plus\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }\n        }), \" add cheack\");\n      }\n    },\n    localization: {\n      pagination: {\n        labelDisplayedRows: '{count} of {to}-{from} '\n      }\n    },\n    title: \"Transactions\",\n    columns: state.columns,\n    data: state.data,\n    options: {\n      actionsColumnIndex: -1,\n      rowStyle: rowData => {\n        if (rowData.type === 'Add') {\n          return {\n            background: ' linear-gradient(90deg, rgba(190,255,224,1) 31%, rgba(250,255,253,0.7987570028011204) 100%)'\n          };\n        }\n\n        if (rowData.type === 'Minus') {\n          return {\n            background: 'linear-gradient( 89.5deg,  rgba(246,114,128,1) 0.2%, rgba(248,177,149,1) 90.6% )'\n          };\n        }\n\n        return {};\n      }\n    },\n    actions: [{\n      icon: 'save_alt',\n      tooltip: 'Download File',\n      onClick: (event, rowData) => {\n        window.open(`http://localhost:8000/downloadFile/${rowData.file}`);\n      }\n    }],\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              console.log('this is newdata:');\n              console.log(newData);\n              fetch('http://localhost:8000/updateData', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(newData)\n              });\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data]; // console.log(oldData);\n            // fetch('http://www.boi.org.il/currency.xml?curr=01')\n            //   .then(function (res) {\n            //     return res.text();\n            //   })\n            //   .then(function (data) {\n            //     console.log(data);\n            //   });\n\n            fetch(`http://localhost:8000/deleteData/${oldData._id}`, {\n              method: 'Delete',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["D:/reactMUI/reactMUI/my-app/src/Components/DisplayTable.js"],"names":["React","useEffect","MaterialTable","db","require","MaterialTableDemo","props","dataDb","sumAdd","sumMinus","sumTotal","state","setState","useState","columns","data","requestOptions","method","headers","requestOptionsPost","fetch","then","res","json","result","console","log","map","x","type","amount","reverse","arr","updateArr","push","borderRadius","padding","boxShadow","Add","pagination","labelDisplayedRows","actionsColumnIndex","rowStyle","rowData","background","icon","tooltip","onClick","event","window","open","file","onRowAdd","newData","Promise","resolve","setTimeout","prevState","onRowUpdate","oldData","indexOf","body","JSON","stringify","onRowDelete","_id","splice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nconst db = require('./DB');\r\n\r\nexport default function MaterialTableDemo(props) {\r\n  var dataDb = [];\r\n  var sumAdd = 0;\r\n  var sumMinus = 0;\r\n  var sumTotal = 0;\r\n  const [state, setState] = React.useState({\r\n    columns: db.columns,\r\n    data: dataDb,\r\n  });\r\n  let requestOptions = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n  let requestOptionsPost = {\r\n    method: 'Post',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/getData', requestOptions)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        dataDb = data.result;\r\n        console.log(dataDb);\r\n        dataDb.map((x) => {\r\n          if (x.type === 'Add') sumAdd += x.amount;\r\n          if (x.type === 'Minus') sumMinus += x.amount;\r\n        });\r\n        console.log(sumAdd);\r\n        console.log(sumMinus);\r\n        setState({ columns: db.columns, data: dataDb.reverse() });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('hi i am in useafeect-table you change the props?');\r\n    var arr = [...props.updateArr];\r\n    arr.push(...state.data);\r\n    setState({ columns: db.columns, data: arr });\r\n  }, [props.updateArr]);\r\n\r\n  return (\r\n    <MaterialTable\r\n      style={{\r\n        borderRadius: '25px',\r\n        padding: '20px',\r\n        boxShadow: ' 0 4px 90px 0 rgba(0, 0, 0, 0.2)',\r\n      }}\r\n      icons={{\r\n        Add: (props) => {\r\n          return (\r\n            <div>\r\n              <i className='fa fa-plus'></i> add cheack\r\n            </div>\r\n          );\r\n        },\r\n      }}\r\n      localization={{\r\n        pagination: {\r\n          labelDisplayedRows: '{count} of {to}-{from} ',\r\n        },\r\n      }}\r\n      title='Transactions'\r\n      columns={state.columns}\r\n      data={state.data}\r\n      options={{\r\n        actionsColumnIndex: -1,\r\n\r\n        rowStyle: (rowData) => {\r\n          if (rowData.type === 'Add') {\r\n            return {\r\n              background:\r\n                ' linear-gradient(90deg, rgba(190,255,224,1) 31%, rgba(250,255,253,0.7987570028011204) 100%)',\r\n            };\r\n          }\r\n          if (rowData.type === 'Minus') {\r\n            return {\r\n              background:\r\n                'linear-gradient( 89.5deg,  rgba(246,114,128,1) 0.2%, rgba(248,177,149,1) 90.6% )',\r\n            };\r\n          }\r\n\r\n          return {};\r\n        },\r\n      }}\r\n      actions={[\r\n        {\r\n          icon: 'save_alt',\r\n          tooltip: 'Download File',\r\n          onClick: (event, rowData) => {\r\n            window.open(`http://localhost:8000/downloadFile/${rowData.file}`);\r\n          },\r\n        },\r\n      ]}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  console.log('this is newdata:');\r\n                  console.log(newData);\r\n                  fetch('http://localhost:8000/updateData', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(newData),\r\n                  });\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                // console.log(oldData);\r\n                // fetch('http://www.boi.org.il/currency.xml?curr=01')\r\n                //   .then(function (res) {\r\n                //     return res.text();\r\n                //   })\r\n                //   .then(function (data) {\r\n                //     console.log(data);\r\n                //   });\r\n                fetch(`http://localhost:8000/deleteData/${oldData._id}`, {\r\n                  method: 'Delete',\r\n                  headers: { 'Content-Type': 'application/json' },\r\n                });\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}