{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactMUI\\\\reactMUI\\\\my-app\\\\src\\\\Components\\\\DisplayTable.js\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { subBusinessDays } from 'date-fns';\n\nconst db = require('./DB');\n\nexport default function MaterialTableDemo(props) {\n  var dataDb = [];\n  const [state, setState] = React.useState({\n    columns: db.columns,\n    data: dataDb\n  });\n  let requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  useEffect(() => {\n    fetch('http://localhost:8000/getData', requestOptions).then(res => {\n      return res.json();\n    }).then(data => {\n      dataDb = data.result;\n      setState({\n        columns: db.columns,\n        data: dataDb\n      });\n    });\n  }, []);\n  useEffect(() => {\n    console.log('hi i am in useafeect-table you change the props?');\n    var arr = [...state.data];\n    arr.push(...props.updateArr);\n    setState({\n      columns: db.columns,\n      data: arr\n    });\n  }, [props.updateArr]);\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Transactions\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["D:/reactMUI/reactMUI/my-app/src/Components/DisplayTable.js"],"names":["React","useEffect","MaterialTable","subBusinessDays","db","require","MaterialTableDemo","props","dataDb","state","setState","useState","columns","data","requestOptions","method","headers","fetch","then","res","json","result","console","log","arr","push","updateArr","onRowAdd","newData","Promise","resolve","setTimeout","prevState","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,eAAT,QAAgC,UAAhC;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC/C,MAAIC,MAAM,GAAG,EAAb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACW,QAAN,CAAe;AACvCC,IAAAA,OAAO,EAAER,EAAE,CAACQ,OAD2B;AAEvCC,IAAAA,IAAI,EAAEL;AAFiC,GAAf,CAA1B;AAIA,MAAIM,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,KADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAFU,GAArB;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAAC,+BAAD,EAAkCH,cAAlC,CAAL,CACGI,IADH,CACSC,GAAD,IAAS;AACb,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KAHH,EAIGF,IAJH,CAISL,IAAD,IAAU;AACdL,MAAAA,MAAM,GAAGK,IAAI,CAACQ,MAAd;AACAX,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,OAAO,EAAER,EAAE,CAACQ,OAAd;AAAuBC,QAAAA,IAAI,EAAEL;AAA7B,OAAD,CAAR;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAWAP,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACA,QAAIC,GAAG,GAAG,CAAC,GAAGf,KAAK,CAACI,IAAV,CAAV;AACAW,IAAAA,GAAG,CAACC,IAAJ,CAAS,GAAGlB,KAAK,CAACmB,SAAlB;AACAhB,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,OAAO,EAAER,EAAE,CAACQ,OAAd;AAAuBC,MAAAA,IAAI,EAAEW;AAA7B,KAAD,CAAR;AACD,GALQ,EAKN,CAACjB,KAAK,CAACmB,SAAP,CALM,CAAT;AAOA,sBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,OAAO,EAAEjB,KAAK,CAACG,OAFjB;AAGE,IAAA,IAAI,EAAEH,KAAK,CAACI,IAHd;AAIE,IAAA,QAAQ,EAAE;AACRc,MAAAA,QAAQ,EAAGC,OAAD,IACR,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACvBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACPpB,UAAAA,QAAQ,CAAEsB,SAAD,IAAe;AACtB,kBAAMnB,IAAI,GAAG,CAAC,GAAGmB,SAAS,CAACnB,IAAd,CAAb;AACAA,YAAAA,IAAI,CAACY,IAAL,CAAUG,OAAV;AACA,mBAAO,EAAE,GAAGI,SAAL;AAAgBnB,cAAAA;AAAhB,aAAP;AACD,WAJO,CAAR;AAKD,SAPS,EAOP,GAPO,CAAV;AAQD,OATD,CAFM;AAYRoB,MAAAA,WAAW,EAAE,CAACL,OAAD,EAAUM,OAAV,KACX,IAAIL,OAAJ,CAAaC,OAAD,IAAa;AACvBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;;AACP,cAAII,OAAJ,EAAa;AACXxB,YAAAA,QAAQ,CAAEsB,SAAD,IAAe;AACtB,oBAAMnB,IAAI,GAAG,CAAC,GAAGmB,SAAS,CAACnB,IAAd,CAAb;AACAA,cAAAA,IAAI,CAACA,IAAI,CAACsB,OAAL,CAAaD,OAAb,CAAD,CAAJ,GAA8BN,OAA9B;AACA,qBAAO,EAAE,GAAGI,SAAL;AAAgBnB,gBAAAA;AAAhB,eAAP;AACD,aAJO,CAAR;AAKD;AACF,SATS,EASP,GATO,CAAV;AAUD,OAXD,CAbM;AAyBRuB,MAAAA,WAAW,EAAGF,OAAD,IACX,IAAIL,OAAJ,CAAaC,OAAD,IAAa;AACvBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACPpB,UAAAA,QAAQ,CAAEsB,SAAD,IAAe;AACtB,kBAAMnB,IAAI,GAAG,CAAC,GAAGmB,SAAS,CAACnB,IAAd,CAAb;AACAA,YAAAA,IAAI,CAACwB,MAAL,CAAYxB,IAAI,CAACsB,OAAL,CAAaD,OAAb,CAAZ,EAAmC,CAAnC;AACA,mBAAO,EAAE,GAAGF,SAAL;AAAgBnB,cAAAA;AAAhB,aAAP;AACD,WAJO,CAAR;AAKD,SAPS,EAOP,GAPO,CAAV;AAQD,OATD;AA1BM,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA4CD","sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { subBusinessDays } from 'date-fns';\r\nconst db = require('./DB');\r\n\r\nexport default function MaterialTableDemo(props) {\r\n  var dataDb = [];\r\n  const [state, setState] = React.useState({\r\n    columns: db.columns,\r\n    data: dataDb,\r\n  });\r\n  let requestOptions = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/getData', requestOptions)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        dataDb = data.result;\r\n        setState({ columns: db.columns, data: dataDb });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('hi i am in useafeect-table you change the props?');\r\n    var arr = [...state.data];\r\n    arr.push(...props.updateArr);\r\n    setState({ columns: db.columns, data: arr });\r\n  }, [props.updateArr]);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title='Transactions'\r\n      columns={state.columns}\r\n      data={state.data}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}