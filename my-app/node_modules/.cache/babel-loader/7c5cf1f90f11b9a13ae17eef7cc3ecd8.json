{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sagie\\\\Desktop\\\\New folder\\\\reactMUI\\\\my-app\\\\src\\\\Components\\\\Form.js\";\nimport React from \"react\";\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Grid } from \"@material-ui/core\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport BasicDatePicker from \"./FormDate\";\nimport UploadButtons from \"./FormUpload\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"white\",\n    boxShadow: \" 0 4px 90px 0 rgba(0, 0, 0, 0.2)\",\n    borderRadius: \"60px\",\n    marginTop: 20,\n    textAlign: \"center\",\n    // direction: 'right',\n    marginBottom: 20,\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(2),\n      width: \"20ch\"\n    }\n  },\n  try: {\n    textAlign: \"right\",\n    direction: \"right\"\n  },\n  grid: {\n    marginBottom: 8 // direction: 'rtl',\n\n  },\n  end: {\n    margin: 5\n  }\n}));\nconst banks = [{\n  name: \"אוצר החייל\"\n}, {\n  name: \"לאומי\"\n}, {\n  name: \"בנק הפועלים\"\n}];\nconst currencies = [{\n  value: \"ILS\",\n  label: \"₪\"\n}, {\n  value: \"USD\",\n  label: \"$\"\n}, {\n  value: \"EUR\",\n  label: \"€\"\n}, {\n  value: \"BTC\",\n  label: \"฿\"\n}, {\n  value: \"JPY\",\n  label: \"¥\"\n}];\nexport default function Form(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"3900\");\n  const [bank, setBank] = React.useState(\"OsharHyal\");\n  const [currency, setCurrency] = React.useState(\"ILS\");\n  const [subject, setSubject] = React.useState(\"House\");\n  const [type, setType] = React.useState(props.type);\n  const [file, setFile] = React.useState(\"null\");\n  const [timeHour, setTimeHour] = React.useState(new Date());\n  const [timeDate, setDate] = React.useState(new Date());\n  const [timeDateNow, setTimeDateNow] = React.useState(new Date());\n\n  const updateFile = file => {\n    setFile(file);\n    return false;\n  };\n\n  const updateHour = hour => {\n    setTimeHour(hour.getHours());\n  };\n\n  const updateDate = item => {\n    setDate(item);\n  };\n\n  const updateDateNow = date => {\n    setTimeDateNow(date);\n  };\n\n  const handleCurrency = event => {\n    setCurrency(event.target.value);\n  };\n\n  const handleBank = event => {\n    setBank(event.target.value);\n  };\n\n  const handleAmount = event => {\n    setValue(event.target.value);\n  };\n\n  const handleSubject = event => {\n    setSubject(event.target.value);\n  };\n\n  const handleType = event => {\n    setType(event.target.value);\n  };\n\n  const send = event => {\n    const transaction = {\n      amount: Number(value),\n      currency: currency,\n      bank: bank,\n      subject: subject,\n      type: type,\n      timeDate: timeDate,\n      timeHour: timeHour,\n      timeDateNow: timeDateNow,\n      file: file\n    };\n    let requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(transaction)\n    };\n    fetch(\"http://localhost:8000/saveData\", requestOptions).then(res => {\n      // then print response status\n      console.log(\"sucsess\");\n    });\n    props.getTrans(transaction);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    onSubmit: send,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-multiline-flexible\",\n    label: \"\\u05E1\\u05DB\\u05D5\\u05DD\",\n    multiline: true,\n    rowsMax: \"4\",\n    textAlign: \"center\",\n    value: value,\n    className: classes.try,\n    onChange: handleAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    textAlign: \"right\",\n    id: \"standard-select-currency\",\n    select: true,\n    label: \"\\u05D1\\u05D7\\u05D9\\u05E8\\u05D4 \\u05DE\\u05D8\\u05D1\\u05E2\",\n    value: currency,\n    onChange: handleCurrency,\n    helperText: \"\\u05D1\\u05D7\\u05E8 \\u05D0\\u05EA \\u05D4\\u05DE\\u05D8\\u05D1\\u05E2 \\u05D4\\u05E8\\u05E6\\u05D5\\u05D9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, currencies.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, option.label))), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-select-currency\",\n    select: true,\n    label: \"\\u05D1\\u05D7\\u05E8 \\u05D1\\u05E0\\u05E7\",\n    value: bank,\n    onChange: handleBank,\n    helperText: \"\\u05D1\\u05D7\\u05E8 \\u05D0\\u05EA \\u05D4\\u05D1\\u05E0\\u05E7 \\u05D4\\u05E8\\u05E6\\u05D5\\u05D9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, banks.map(bank => /*#__PURE__*/React.createElement(MenuItem, {\n    key: bank.name,\n    value: bank.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, bank.name))), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-multiline-flexible\",\n    label: \"\\u05E8\\u05E9\\u05D5\\u05DD \\u05E0\\u05D5\\u05E9\\u05D0 \",\n    multiline: true,\n    onChange: handleSubject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    id: \"standard-multiline-flexible\",\n    label: \"\\u05E1\\u05D5\\u05D2 \\u05D8\\u05E8\\u05D6\\u05E0\\u05E7\\u05E6\\u05D9\\u05D4\",\n    multiline: true,\n    rowsMax: \"4\",\n    value: props.type,\n    onChange: handleType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BasicDatePicker, {\n    updateHour: updateHour,\n    updateDate: updateDate,\n    updateDateNow: updateDateNow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.end,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      send();\n      return false;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  }, \"\\u05D4\\u05D5\\u05E1\\u05E3 \\u05D8\\u05E8\\u05E0\\u05D6\\u05E7\\u05E6\\u05D9\\u05D4\")), /*#__PURE__*/React.createElement(UploadButtons, {\n    updateFile: updateFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  })))))\n  /* <div>\r\n          <TextField\r\n            id='filled-multiline-flexible'\r\n            label='Multiline'\r\n            multiline\r\n            rowsMax='4'\r\n            value={value}\r\n            onChange={handleChange}\r\n            variant='filled'\r\n          />\r\n          <TextField\r\n            id='filled-textarea'\r\n            label='Multiline Placeholder'\r\n            placeholder='Placeholder'\r\n            multiline\r\n            variant='filled'\r\n          />\r\n          <TextField\r\n            id='filled-multiline-static'\r\n            label='Multiline'\r\n            multiline\r\n            rows='4'\r\n            defaultValue='Default Value'\r\n            variant='filled'\r\n          />\r\n        </div> */\n  ;\n}","map":{"version":3,"sources":["C:/Users/Sagie/Desktop/New folder/reactMUI/my-app/src/Components/Form.js"],"names":["React","makeStyles","withTheme","TextField","Grid","MenuItem","Button","BasicDatePicker","UploadButtons","useStyles","theme","root","backgroundColor","boxShadow","borderRadius","marginTop","textAlign","marginBottom","margin","spacing","width","try","direction","grid","end","banks","name","currencies","value","label","Form","props","classes","setValue","useState","bank","setBank","currency","setCurrency","subject","setSubject","type","setType","file","setFile","timeHour","setTimeHour","Date","timeDate","setDate","timeDateNow","setTimeDateNow","updateFile","updateHour","hour","getHours","updateDate","item","updateDateNow","date","handleCurrency","event","target","handleBank","handleAmount","handleSubject","handleType","send","transaction","amount","Number","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","console","log","getTrans","map","option"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport { makeStyles, withTheme } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport BasicDatePicker from \"./FormDate\";\r\nimport UploadButtons from \"./FormUpload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"white\",\r\n    boxShadow: \" 0 4px 90px 0 rgba(0, 0, 0, 0.2)\",\r\n    borderRadius: \"60px\",\r\n    marginTop: 20,\r\n    textAlign: \"center\",\r\n    // direction: 'right',\r\n    marginBottom: 20,\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(2),\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  try: {\r\n    textAlign: \"right\",\r\n    direction: \"right\",\r\n  },\r\n  grid: {\r\n    marginBottom: 8,\r\n    // direction: 'rtl',\r\n  },\r\n  end: { margin: 5 },\r\n}));\r\n\r\nconst banks = [\r\n  {\r\n    name: \"אוצר החייל\",\r\n  },\r\n  { name: \"לאומי\" },\r\n  { name: \"בנק הפועלים\" },\r\n];\r\nconst currencies = [\r\n  {\r\n    value: \"ILS\",\r\n    label: \"₪\",\r\n  },\r\n  {\r\n    value: \"USD\",\r\n    label: \"$\",\r\n  },\r\n  {\r\n    value: \"EUR\",\r\n    label: \"€\",\r\n  },\r\n  {\r\n    value: \"BTC\",\r\n    label: \"฿\",\r\n  },\r\n  {\r\n    value: \"JPY\",\r\n    label: \"¥\",\r\n  },\r\n];\r\n\r\nexport default function Form(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"3900\");\r\n  const [bank, setBank] = React.useState(\"OsharHyal\");\r\n  const [currency, setCurrency] = React.useState(\"ILS\");\r\n  const [subject, setSubject] = React.useState(\"House\");\r\n  const [type, setType] = React.useState(props.type);\r\n  const [file, setFile] = React.useState(\"null\");\r\n  const [timeHour, setTimeHour] = React.useState(new Date());\r\n  const [timeDate, setDate] = React.useState(new Date());\r\n  const [timeDateNow, setTimeDateNow] = React.useState(new Date());\r\n\r\n  const updateFile = (file) => {\r\n    setFile(file);\r\n    return false;\r\n  };\r\n  const updateHour = (hour) => {\r\n    setTimeHour(hour.getHours());\r\n  };\r\n  const updateDate = (item) => {\r\n    setDate(item);\r\n  };\r\n  const updateDateNow = (date) => {\r\n    setTimeDateNow(date);\r\n  };\r\n\r\n  const handleCurrency = (event) => {\r\n    setCurrency(event.target.value);\r\n  };\r\n  const handleBank = (event) => {\r\n    setBank(event.target.value);\r\n  };\r\n  const handleAmount = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  const handleSubject = (event) => {\r\n    setSubject(event.target.value);\r\n  };\r\n  const handleType = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  const send = (event) => {\r\n    const transaction = {\r\n      amount: Number(value),\r\n      currency: currency,\r\n      bank: bank,\r\n      subject: subject,\r\n      type: type,\r\n      timeDate: timeDate,\r\n      timeHour: timeHour,\r\n      timeDateNow: timeDateNow,\r\n      file: file,\r\n    };\r\n    let requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(transaction),\r\n    };\r\n    fetch(\"http://localhost:8000/saveData\", requestOptions).then((res) => {\r\n      // then print response status\r\n      console.log(\"sucsess\");\r\n    });\r\n    props.getTrans(transaction);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.grid}>\r\n      <Grid item xs={1} />\r\n      <Grid item xs={10}>\r\n        <form\r\n          className={classes.root}\r\n          noValidate\r\n          onSubmit={send}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"סכום\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n                textAlign=\"center\"\r\n                value={value}\r\n                className={classes.try}\r\n                onChange={handleAmount}\r\n              />\r\n              <TextField\r\n                textAlign=\"right\"\r\n                id=\"standard-select-currency\"\r\n                select\r\n                label=\"בחירה מטבע\"\r\n                value={currency}\r\n                onChange={handleCurrency}\r\n                helperText=\"בחר את המטבע הרצוי\"\r\n              >\r\n                {currencies.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"standard-select-currency\"\r\n                select\r\n                label=\"בחר בנק\"\r\n                value={bank}\r\n                onChange={handleBank}\r\n                helperText=\"בחר את הבנק הרצוי\"\r\n              >\r\n                {banks.map((bank) => (\r\n                  <MenuItem key={bank.name} value={bank.name}>\r\n                    {bank.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"רשום נושא \"\r\n                multiline\r\n                onChange={handleSubject}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <TextField\r\n                disabled\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"סוג טרזנקציה\"\r\n                multiline\r\n                rowsMax=\"4\"\r\n                value={props.type}\r\n                onChange={handleType}\r\n              />\r\n              {/* <BasicDatePicker /> */}\r\n              <BasicDatePicker\r\n                updateHour={updateHour}\r\n                updateDate={updateDate}\r\n                updateDateNow={updateDateNow}\r\n              />\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid container className={classes.end}>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={5}>\r\n              <Button\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  send();\r\n                  return false;\r\n                }}\r\n              >\r\n                הוסף טרנזקציה\r\n              </Button>\r\n            </Grid>\r\n            <UploadButtons updateFile={updateFile} />\r\n            <Grid item xs={1}></Grid>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n\r\n    /* <div>\r\n            <TextField\r\n              id='filled-multiline-flexible'\r\n              label='Multiline'\r\n              multiline\r\n              rowsMax='4'\r\n              value={value}\r\n              onChange={handleChange}\r\n              variant='filled'\r\n            />\r\n            <TextField\r\n              id='filled-textarea'\r\n              label='Multiline Placeholder'\r\n              placeholder='Placeholder'\r\n              multiline\r\n              variant='filled'\r\n            />\r\n            <TextField\r\n              id='filled-multiline-static'\r\n              label='Multiline'\r\n              multiline\r\n              rows='4'\r\n              defaultValue='Default Value'\r\n              variant='filled'\r\n            />\r\n          </div> */\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}