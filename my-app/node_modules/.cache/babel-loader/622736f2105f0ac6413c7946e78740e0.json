{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactMUI\\\\reactMUI\\\\my-app\\\\src\\\\Components\\\\DisplayTable.js\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { SvgIconProps } from '@material-ui/core/SvgIcon';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Add from '@material-ui/icons/Add';\nimport Check from '@material-ui/icons/Check';\nimport FilterList from '@material-ui/icons/FilterList';\nimport Remove from '@material-ui/icons/Remove';\n\nconst db = require('./DB');\n\nexport default function MaterialTableDemo(props) {\n  var dataDb = [];\n  const [state, setState] = React.useState({\n    columns: db.columns,\n    data: dataDb\n  });\n  let requestOptions = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  useEffect(() => {\n    fetch('http://localhost:8000/getData', requestOptions).then(res => {\n      return res.json();\n    }).then(data => {\n      dataDb = data.result;\n      setState({\n        columns: db.columns,\n        data: dataDb\n      });\n    });\n  }, []);\n  useEffect(() => {\n    console.log('hi i am in useafeect-table you change the props?');\n    var arr = [...state.data];\n    arr.push(...props.updateArr);\n    setState({\n      columns: db.columns,\n      data: arr\n    });\n  }, [props.updateArr]);\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    icons: {\n      Check: () => /*#__PURE__*/React.createElement(Check, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 22\n        }\n      }),\n      Export: () => /*#__PURE__*/React.createElement(SaveAlt, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 23\n        }\n      }),\n      Filter: () => /*#__PURE__*/React.createElement(FilterList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }\n      }),\n      FirstPage: () => /*#__PURE__*/React.createElement(FirstPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 26\n        }\n      }),\n      LastPage: () => /*#__PURE__*/React.createElement(LastPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }),\n      NextPage: () => /*#__PURE__*/React.createElement(ChevronRight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }),\n      PreviousPage: () => /*#__PURE__*/React.createElement(ChevronLeft, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }\n      }),\n      Search: () => /*#__PURE__*/React.createElement(Search, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 23\n        }\n      }),\n      ThirdStateCheck: () => /*#__PURE__*/React.createElement(Remove, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 32\n        }\n      }),\n      ViewColumn: () => /*#__PURE__*/React.createElement(ViewColumn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 27\n        }\n      }),\n      DetailPanel: () => /*#__PURE__*/React.createElement(ChevronRight, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 28\n        }\n      })\n    },\n    title: \"Transactions\",\n    columns: state.columns,\n    data: state.data,\n    options: {\n      rowStyle: rowData => {\n        if (rowData.type === 'Add') {\n          return {\n            backgroundColor: 'green'\n          };\n        }\n\n        if (rowData.type === 'Minus') {\n          return {\n            backgroundColor: 'red'\n          };\n        }\n\n        return {};\n      }\n    },\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["D:/reactMUI/reactMUI/my-app/src/Components/DisplayTable.js"],"names":["React","useEffect","MaterialTable","SvgIconProps","Search","ViewColumn","SaveAlt","ChevronLeft","ChevronRight","FirstPage","LastPage","Add","Check","FilterList","Remove","db","require","MaterialTableDemo","props","dataDb","state","setState","useState","columns","data","requestOptions","method","headers","fetch","then","res","json","result","console","log","arr","push","updateArr","Export","Filter","NextPage","PreviousPage","ThirdStateCheck","DetailPanel","rowStyle","rowData","type","backgroundColor","onRowAdd","newData","Promise","resolve","setTimeout","prevState","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { SvgIconProps } from '@material-ui/core/SvgIcon';\r\n\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Add from '@material-ui/icons/Add';\r\nimport Check from '@material-ui/icons/Check';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport Remove from '@material-ui/icons/Remove';\r\n\r\nconst db = require('./DB');\r\n\r\nexport default function MaterialTableDemo(props) {\r\n  var dataDb = [];\r\n  const [state, setState] = React.useState({\r\n    columns: db.columns,\r\n    data: dataDb,\r\n  });\r\n  let requestOptions = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/getData', requestOptions)\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        dataDb = data.result;\r\n        setState({ columns: db.columns, data: dataDb });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('hi i am in useafeect-table you change the props?');\r\n    var arr = [...state.data];\r\n    arr.push(...props.updateArr);\r\n    setState({ columns: db.columns, data: arr });\r\n  }, [props.updateArr]);\r\n\r\n  return (\r\n    <MaterialTable\r\n      icons={{\r\n        Check: () => <Check />,\r\n        Export: () => <SaveAlt />,\r\n        Filter: () => <FilterList />,\r\n        FirstPage: () => <FirstPage />,\r\n        LastPage: () => <LastPage />,\r\n        NextPage: () => <ChevronRight />,\r\n        PreviousPage: () => <ChevronLeft />,\r\n        Search: () => <Search />,\r\n        ThirdStateCheck: () => <Remove />,\r\n        ViewColumn: () => <ViewColumn />,\r\n        DetailPanel: () => <ChevronRight />,\r\n      }}\r\n      title='Transactions'\r\n      columns={state.columns}\r\n      data={state.data}\r\n      options={{\r\n        rowStyle: (rowData) => {\r\n          if (rowData.type === 'Add') {\r\n            return { backgroundColor: 'green' };\r\n          }\r\n          if (rowData.type === 'Minus') {\r\n            return { backgroundColor: 'red' };\r\n          }\r\n\r\n          return {};\r\n        },\r\n      }}\r\n      editable={{\r\n        onRowAdd: (newData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}