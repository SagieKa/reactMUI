{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sagie\\\\Desktop\\\\New folder\\\\reactMUI\\\\my-app\\\\src\\\\Components\\\\FormUpload.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport { green } from \"@material-ui/core/colors\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport Description from \"@material-ui/icons/Description\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(0)\n    }\n  },\n  input: {\n    display: \"none\"\n  },\n  circle: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\nexport default function UploadButtons(props) {\n  const classes = useStyles();\n  const [showDone, setShowDone] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n  const [file, setFile] = React.useState(null);\n  const [upload, setUpload] = React.useState(null);\n  const [loaded, setloaded] = React.useState(0);\n\n  const chooseFile = async e => {\n    // console.warn(e.target.files);\n    let file = e.target.files;\n    await setUpload(file[0]); // click2();\n    // click();\n  };\n\n  const chooseFile2 = async e => {\n    // console.warn(e.target.files);\n    let file = e.target.files;\n    await setUpload(file[0]);\n    const data = new FormData();\n    data.append(\"file\", file[0]);\n    console.log(\"this is the data:\");\n    console.log(data);\n    setFile(\"dhdjdjh\");\n    await axios.post(\"http://localhost:8000/upload\", data, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      setFile(res.data.filename);\n      console.log(res.data.filename);\n      props.updateFile(res.data.filename);\n      setShowDone(true); // res.send({ result: true });\n    }); // click2();\n    // click();\n  };\n\n  const click = e => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"file\", upload);\n    console.log(data);\n    axios.post(\"http://localhost:8000/upload\", data, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      setFile(res.data.filename);\n      console.log(res.data.filename);\n      props.updateFile(res.data.filename);\n      setShowDone(true);\n    });\n    return false;\n  };\n\n  const click2 = async () => {\n    const data = new FormData();\n    data.append(\"file\", upload);\n    console.log(\"this is the data:\");\n    console.log(data);\n    setFile(\"dhdjdjh\");\n    await axios.post(\"http://localhost:8000/upload\", data, {// receive two    parameter endpoint url ,form data\n    }).then(res => {\n      // then print response status\n      setFile(res.data.filename);\n      console.log(res.data.filename);\n      props.updateFile(res.data.filename);\n      setShowDone(true); // res.send({ result: true });\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Grid item xs={1}>\n    //   </Grid>\n    React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }\n    }, showDone ? /*#__PURE__*/React.createElement(DoneIcon, {\n      fontSize: \"large\",\n      style: {\n        color: green[500]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      className: classes.input,\n      id: \"contained-button-file\",\n      multiple: true // type='file'\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"contained-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"inherit\",\n      className: classes.button,\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 22\n        }\n      }),\n      onClick: click2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, \"\\u05D8\\u05E2\\u05DF \\u05DE\\u05E1\\u05DE\\u05DA\")), /*#__PURE__*/React.createElement(\"input\", {\n      // accept='*.pdf'\n      className: classes.input,\n      id: \"icon-button-file\",\n      type: \"file\",\n      onChange: e => {\n        chooseFile2(e);\n      } // accept='image/*'\n      ,\n      accept: \"application/pdf\",\n      name: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"icon-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    })), \"\\u05D1\\u05D7\\u05D9\\u05E8\\u05EA \\u05DE\\u05E1\\u05DE\\u05DA\"))\n  );\n}","map":{"version":3,"sources":["C:/Users/Sagie/Desktop/New folder/reactMUI/my-app/src/Components/FormUpload.js"],"names":["React","makeStyles","Grid","Button","IconButton","CloudUploadIcon","green","DoneIcon","Description","axios","useStyles","theme","root","margin","spacing","input","display","circle","marginLeft","UploadButtons","props","classes","showDone","setShowDone","useState","progress","setProgress","file","setFile","upload","setUpload","loaded","setloaded","chooseFile","e","target","files","chooseFile2","data","FormData","append","console","log","post","then","res","filename","updateFile","click","preventDefault","click2","color","button"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\n\r\nimport Description from \"@material-ui/icons/Description\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(0),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  circle: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function UploadButtons(props) {\r\n  const classes = useStyles();\r\n  const [showDone, setShowDone] = React.useState(false);\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [file, setFile] = React.useState(null);\r\n  const [upload, setUpload] = React.useState(null);\r\n  const [loaded, setloaded] = React.useState(0);\r\n  const chooseFile = async (e) => {\r\n    // console.warn(e.target.files);\r\n    let file = e.target.files;\r\n    await setUpload(file[0]);\r\n    // click2();\r\n    // click();\r\n  };\r\n  const chooseFile2 = async (e) => {\r\n    // console.warn(e.target.files);\r\n    let file = e.target.files;\r\n    await setUpload(file[0]);\r\n    const data = new FormData();\r\n    data.append(\"file\", file[0]);\r\n    console.log(\"this is the data:\");\r\n    console.log(data);\r\n    setFile(\"dhdjdjh\");\r\n\r\n    await axios\r\n      .post(\"http://localhost:8000/upload\", data, {\r\n        // receive two    parameter endpoint url ,form data\r\n      })\r\n      .then((res) => {\r\n        // then print response status\r\n\r\n        setFile(res.data.filename);\r\n        console.log(res.data.filename);\r\n        props.updateFile(res.data.filename);\r\n        setShowDone(true);\r\n        // res.send({ result: true });\r\n      });\r\n    // click2();\r\n    // click();\r\n  };\r\n\r\n  const click = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append(\"file\", upload);\r\n    console.log(data);\r\n    axios\r\n      .post(\"http://localhost:8000/upload\", data, {\r\n        // receive two    parameter endpoint url ,form data\r\n      })\r\n      .then((res) => {\r\n        // then print response status\r\n\r\n        setFile(res.data.filename);\r\n        console.log(res.data.filename);\r\n        props.updateFile(res.data.filename);\r\n        setShowDone(true);\r\n      });\r\n    return false;\r\n  };\r\n\r\n  const click2 = async () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", upload);\r\n    console.log(\"this is the data:\");\r\n    console.log(data);\r\n    setFile(\"dhdjdjh\");\r\n\r\n    await axios\r\n      .post(\"http://localhost:8000/upload\", data, {\r\n        // receive two    parameter endpoint url ,form data\r\n      })\r\n      .then((res) => {\r\n        // then print response status\r\n\r\n        setFile(res.data.filename);\r\n        console.log(res.data.filename);\r\n        props.updateFile(res.data.filename);\r\n        setShowDone(true);\r\n        // res.send({ result: true });\r\n      });\r\n  };\r\n  return (\r\n    // <Grid item xs={1}>\r\n    //   </Grid>\r\n    <Grid item xs={5}>\r\n      {showDone ? (\r\n        <DoneIcon fontSize=\"large\" style={{ color: green[500] }} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <input\r\n        accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple\r\n        // type='file'\r\n      />\r\n      <label htmlFor=\"contained-button-file\">\r\n        {/* <CircularProgress\r\n          variant='determinate'\r\n          value={progress}\r\n          color='secondary'\r\n        /> */}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"inherit\"\r\n          className={classes.button}\r\n          startIcon={<CloudUploadIcon />}\r\n          onClick={click2}\r\n        >\r\n          טען מסמך\r\n        </Button>\r\n        {/* <button\r\n          type='button'\r\n          // onClick={e => {\r\n          //   click(e);\r\n          //   return false;\r\n          // }}\r\n          onClick={click2}\r\n        >\r\n          Upload\r\n        </button>\r\n        <input type='button' onClick={click2} value='Click Me'></input> */}\r\n      </label>\r\n\r\n      <input\r\n        // accept='*.pdf'\r\n        className={classes.input}\r\n        id=\"icon-button-file\"\r\n        type=\"file\"\r\n        onChange={(e) => {\r\n          chooseFile2(e);\r\n        }}\r\n        // accept='image/*'\r\n\r\n        accept=\"application/pdf\"\r\n        name=\"file\"\r\n      />\r\n      <label htmlFor=\"icon-button-file\">\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"upload picture\"\r\n          component=\"span\"\r\n        >\r\n          <Description />\r\n        </IconButton>\r\n        בחירת מסמך\r\n      </label>\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}