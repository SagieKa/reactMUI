{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactMUI\\\\reactMUI\\\\my-app\\\\src\\\\Components\\\\Display.js\";\nimport React from 'react';\nimport { useState, useEffect, useRef, useImperativeHandle, forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport DisplayTable from './DisplayTable';\nimport Form from './Form';\nimport Functions from './Functions';\nimport { Button, Box } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  try: {\n    background: 'linear-gradient(315deg, #63d471 0%, #233329 74%)'\n  },\n  container: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(12, 1fr)',\n    gridGap: theme.spacing(3)\n  },\n  paper: {\n    width: '900',\n    height: '500px',\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    whiteSpace: 'nowrap',\n    marginBottom: theme.spacing(50)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  }\n}));\nconst Display = forwardRef((props, ref) => {\n  const classes = useStyles();\n  const [updateArr, setUpdateArr] = useState([]);\n  const [trans, setTrnas] = useState([]);\n  const data = props.transactionBody;\n  useImperativeHandle(ref, () => ({\n    setDisplay(trans) {\n      setUpdateArr([...trans]);\n    }\n\n  })); // const clicki = () => {\n  //   console.log(props.transactionBody);\n  //   console.log(props.transactionBody[0]);\n  //   const arr = ['a', 'b', 'c'];\n  // };\n\n  useEffect(() => {\n    console.log('hi i am a user effect in display');\n    props.change(updateArr);\n  }, [props.transactionBody]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"updates\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DisplayTable, {\n    trans: props.transactionBody,\n    updateArr: updateArr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"updates\")));\n});\nexport default Display;","map":{"version":3,"sources":["D:/reactMUI/reactMUI/my-app/src/Components/Display.js"],"names":["React","useState","useEffect","useRef","useImperativeHandle","forwardRef","makeStyles","Typography","Paper","Divider","Grid","DisplayTable","Form","Functions","Button","Box","useStyles","theme","try","background","container","display","gridTemplateColumns","gridGap","spacing","paper","width","height","padding","textAlign","color","palette","text","secondary","whiteSpace","marginBottom","divider","margin","Display","props","ref","classes","updateArr","setUpdateArr","trans","setTrnas","data","transactionBody","setDisplay","console","log","change"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,QADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,mBAJF,EAKEC,UALF,QAMO,OANP;AAOA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACvCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AADT,GADkC;AAIvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,mBAAmB,EAAE,iBAFZ;AAGTC,IAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd;AAHA,GAJ4B;AASvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,KADF;AAELC,IAAAA,MAAM,EAAE,OAFH;AAGLC,IAAAA,OAAO,EAAEX,KAAK,CAACO,OAAN,CAAc,CAAd,CAHJ;AAILK,IAAAA,SAAS,EAAE,QAJN;AAKLC,IAAAA,KAAK,EAAEb,KAAK,CAACc,OAAN,CAAcC,IAAd,CAAmBC,SALrB;AAMLC,IAAAA,UAAU,EAAE,QANP;AAOLC,IAAAA,YAAY,EAAElB,KAAK,CAACO,OAAN,CAAc,EAAd;AAPT,GATgC;AAkBvCY,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAEpB,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADD;AAlB8B,CAAZ,CAAD,CAA5B;AAuBA,MAAMc,OAAO,GAAGjC,UAAU,CAAC,CAACkC,KAAD,EAAQC,GAAR,KAAgB;AACzC,QAAMC,OAAO,GAAGzB,SAAS,EAAzB;AACA,QAAM,CAAC0B,SAAD,EAAYC,YAAZ,IAA4B1C,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC2C,KAAD,EAAQC,QAAR,IAAoB5C,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM6C,IAAI,GAAGP,KAAK,CAACQ,eAAnB;AAEA3C,EAAAA,mBAAmB,CAACoC,GAAD,EAAM,OAAO;AAC9BQ,IAAAA,UAAU,CAACJ,KAAD,EAAQ;AAChBD,MAAAA,YAAY,CAAC,CAAC,GAAGC,KAAJ,CAAD,CAAZ;AACD;;AAH6B,GAAP,CAAN,CAAnB,CANyC,CAYzC;AACA;AAEA;AACA;AAEA;;AAEA1C,EAAAA,SAAS,CAAC,MAAM;AACd+C,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAX,IAAAA,KAAK,CAACY,MAAN,CAAaT,SAAb;AACD,GAHQ,EAGN,CAACH,KAAK,CAACQ,eAAP,CAHM,CAAT;AAKA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEN,OAAO,CAAChB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEc,KAAK,CAACQ,eAA3B;AAA4C,IAAA,SAAS,EAAEL,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAyBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAED,OAAO,CAAChB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAzBF,CADF;AA+BD,CAxDyB,CAA1B;AA0DA,eAAea,OAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useImperativeHandle,\r\n  forwardRef,\r\n} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DisplayTable from './DisplayTable';\r\nimport Form from './Form';\r\nimport Functions from './Functions';\r\nimport { Button, Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  try: {\r\n    background: 'linear-gradient(315deg, #63d471 0%, #233329 74%)',\r\n  },\r\n  container: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(12, 1fr)',\r\n    gridGap: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    width: '900',\r\n    height: '500px',\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    whiteSpace: 'nowrap',\r\n    marginBottom: theme.spacing(50),\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n}));\r\n\r\nconst Display = forwardRef((props, ref) => {\r\n  const classes = useStyles();\r\n  const [updateArr, setUpdateArr] = useState([]);\r\n  const [trans, setTrnas] = useState([]);\r\n  const data = props.transactionBody;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    setDisplay(trans) {\r\n      setUpdateArr([...trans]);\r\n    },\r\n  }));\r\n\r\n  // const clicki = () => {\r\n  //   console.log(props.transactionBody);\r\n\r\n  //   console.log(props.transactionBody[0]);\r\n  //   const arr = ['a', 'b', 'c'];\r\n\r\n  // };\r\n\r\n  useEffect(() => {\r\n    console.log('hi i am a user effect in display');\r\n    props.change(updateArr);\r\n  }, [props.transactionBody]);\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={1}>\r\n        <Paper className={classes.paper}>updates</Paper>\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        <DisplayTable trans={props.transactionBody} updateArr={updateArr} />\r\n        {/* <Paper className={classes.paper}>\r\n          what you add is here\r\n          <button type='button' onClick={clicki}>\r\n            clicki\r\n          </button>\r\n          <h1>\r\n            here: {trans}\r\n            {props.transactionBody.map((item) => (\r\n              <h3>{item.type}</h3>\r\n            ))}\r\n          </h1>\r\n          <h1>\r\n            here: {trans}\r\n            {updateArr.map((item) => (\r\n              <h3>{item.amount}</h3>\r\n            ))}\r\n          </h1>\r\n        </Paper> */}\r\n      </Grid>\r\n      <Grid item xs={1}>\r\n        <Paper className={classes.paper}>updates</Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default Display;\r\n"]},"metadata":{},"sourceType":"module"}