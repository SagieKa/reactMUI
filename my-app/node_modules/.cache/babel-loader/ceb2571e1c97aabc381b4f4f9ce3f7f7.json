{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport { fade, withStyles, useTheme } from '@material-ui/core/styles';\nimport { useForkRef } from '@material-ui/core/utils';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0,\n      outline: 0,\n      WebkitTapHighlightColor: 'transparent',\n      '&:focus > $content $label': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      },\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element when expanded. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element when selected. */\n    selected: {},\n\n    /* Styles applied to the `role=\"group\"` element. */\n    group: {\n      margin: 0,\n      padding: 0,\n      marginLeft: 17\n    },\n\n    /* Styles applied to the tree node content. */\n    content: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n\n    /* Styles applied to the tree node icon and collapse/expand icon. */\n    iconContainer: {\n      marginRight: 4,\n      width: 15,\n      display: 'flex',\n      flexShrink: 0,\n      justifyContent: 'center',\n      '& svg': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the label element. */\n    label: {\n      width: '100%',\n      paddingLeft: 4,\n      position: 'relative',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n};\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str && str.length === 1 && str.match(/\\S/);\n};\n\nvar TreeItem = React.forwardRef(function TreeItem(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      iconProp = props.icon,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onFocus = props.onFocus,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      contextIcons = _React$useContext.icons,\n      focus = _React$useContext.focus,\n      focusFirstNode = _React$useContext.focusFirstNode,\n      focusLastNode = _React$useContext.focusLastNode,\n      focusNextNode = _React$useContext.focusNextNode,\n      focusPreviousNode = _React$useContext.focusPreviousNode,\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\n      selectNode = _React$useContext.selectNode,\n      selectRange = _React$useContext.selectRange,\n      selectNextNode = _React$useContext.selectNextNode,\n      selectPreviousNode = _React$useContext.selectPreviousNode,\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\n      selectAllNodes = _React$useContext.selectAllNodes,\n      expandAllSiblings = _React$useContext.expandAllSiblings,\n      toggleExpansion = _React$useContext.toggleExpansion,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isTabbable = _React$useContext.isTabbable,\n      multiSelect = _React$useContext.multiSelect,\n      getParent = _React$useContext.getParent,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\n\n  var nodeRef = React.useRef(null);\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(nodeRef, ref);\n  var icon = iconProp;\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var icons = contextIcons || {};\n  var theme = useTheme();\n\n  if (!icon) {\n    if (expandable) {\n      if (!expanded) {\n        icon = expandIcon || icons.defaultExpandIcon;\n      } else {\n        icon = collapseIcon || icons.defaultCollapseIcon;\n      }\n\n      if (!icon) {\n        icon = icons.defaultParentIcon;\n      }\n    } else {\n      icon = endIcon || icons.defaultEndIcon;\n    }\n  }\n\n  var handleClick = function handleClick(event) {\n    if (!focused) {\n      focus(nodeId);\n    }\n\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\n\n    if (expandable && !(multiple && isExpanded(nodeId))) {\n      toggleExpansion(event, nodeId);\n    }\n\n    if (multiple) {\n      if (event.shiftKey) {\n        selectRange(event, {\n          end: nodeId\n        });\n      } else {\n        selectNode(event, nodeId, true);\n      }\n    } else {\n      selectNode(event, nodeId);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\n      event.preventDefault();\n    }\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  };\n\n  var handleNextArrow = function handleNextArrow(event) {\n    if (expandable) {\n      if (expanded) {\n        focusNextNode(nodeId);\n      } else {\n        toggleExpansion(event);\n      }\n    }\n\n    return true;\n  };\n\n  var handlePreviousArrow = function handlePreviousArrow(event) {\n    if (expanded) {\n      toggleExpansion(event, nodeId);\n      return true;\n    }\n\n    var parent = getParent(nodeId);\n\n    if (parent) {\n      focus(parent);\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var flag = false;\n    var key = event.key;\n\n    if (event.altKey || event.currentTarget !== event.target) {\n      return;\n    }\n\n    var ctrlPressed = event.ctrlKey || event.metaKey;\n\n    switch (key) {\n      case ' ':\n        if (nodeRef.current === event.currentTarget) {\n          if (multiSelect && event.shiftKey) {\n            flag = selectRange(event, {\n              end: nodeId\n            });\n          } else if (multiSelect) {\n            flag = selectNode(event, nodeId, true);\n          } else {\n            flag = selectNode(event, nodeId);\n          }\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'Enter':\n        if (nodeRef.current === event.currentTarget && expandable) {\n          toggleExpansion(event);\n          flag = true;\n        }\n\n        event.stopPropagation();\n        break;\n\n      case 'ArrowDown':\n        if (multiSelect && event.shiftKey) {\n          selectNextNode(event, nodeId);\n        }\n\n        focusNextNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowUp':\n        if (multiSelect && event.shiftKey) {\n          selectPreviousNode(event, nodeId);\n        }\n\n        focusPreviousNode(nodeId);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        if (theme.direction === 'rtl') {\n          flag = handlePreviousArrow(event);\n        } else {\n          flag = handleNextArrow(event);\n        }\n\n        break;\n\n      case 'ArrowLeft':\n        if (theme.direction === 'rtl') {\n          flag = handleNextArrow(event);\n        } else {\n          flag = handlePreviousArrow(event);\n        }\n\n        break;\n\n      case 'Home':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToFirst(event, nodeId);\n        }\n\n        focusFirstNode();\n        flag = true;\n        break;\n\n      case 'End':\n        if (multiSelect && ctrlPressed && event.shiftKey) {\n          rangeSelectToLast(event, nodeId);\n        }\n\n        focusLastNode();\n        flag = true;\n        break;\n\n      default:\n        if (key === '*') {\n          expandAllSiblings(event, nodeId);\n          flag = true;\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\n          flag = selectAllNodes(event);\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\n          focusByFirstCharacter(nodeId, key);\n          flag = true;\n        }\n\n    }\n\n    if (flag) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (!focused && event.currentTarget === event.target) {\n      focus(nodeId);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  React.useEffect(function () {\n    if (addNodeToNodeMap) {\n      var childIds = [];\n      React.Children.forEach(children, function (child) {\n        if (React.isValidElement(child) && child.props.nodeId) {\n          childIds.push(child.props.nodeId);\n        }\n      });\n      addNodeToNodeMap(nodeId, childIds);\n    }\n  }, [children, nodeId, addNodeToNodeMap]);\n  React.useEffect(function () {\n    if (removeNodeFromNodeMap) {\n      return function () {\n        removeNodeFromNodeMap(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [nodeId, removeNodeFromNodeMap]);\n  React.useEffect(function () {\n    if (mapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n    }\n  }, [mapFirstChar, nodeId, label]);\n  React.useEffect(function () {\n    if (focused) {\n      nodeRef.current.focus();\n    }\n  }, [focused]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    // single-selection trees unset aria-selected\n    ariaSelected = true;\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\n    role: \"treeitem\",\n    onKeyDown: handleKeyDown,\n    onFocus: handleFocus,\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    ref: handleRef,\n    tabIndex: tabbable ? 0 : -1\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    ref: contentRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.iconContainer\n  }, icon), /*#__PURE__*/React.createElement(Typography, {\n    component: \"div\",\n    className: classes.label\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    unmountOnExit: true,\n    className: classes.group,\n    in: expanded,\n    component: \"ul\",\n    role: \"group\"\n  }, TransitionProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The icon used to collapse the node.\r\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\r\n   * The icon displayed next to a end node.\r\n   */\n  endIcon: PropTypes.node,\n\n  /**\r\n   * The icon used to expand the node.\r\n   */\n  expandIcon: PropTypes.node,\n\n  /**\r\n   * The icon to display next to the tree node's label.\r\n   */\n  icon: PropTypes.node,\n\n  /**\r\n   * The tree node label.\r\n   */\n  label: PropTypes.node,\n\n  /**\r\n   * The id of the node.\r\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  onClick: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onFocus: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\r\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeItem'\n})(TreeItem);","map":{"version":3,"sources":["C:/Users/Sagie/Desktop/New folder/reactMUI/my-app/node_modules/@material-ui/lab/esm/TreeItem/TreeItem.js"],"names":["_extends","_objectWithoutProperties","React","clsx","PropTypes","Typography","Collapse","fade","withStyles","useTheme","useForkRef","TreeViewContext","styles","theme","root","listStyle","margin","padding","outline","WebkitTapHighlightColor","backgroundColor","palette","action","hover","primary","main","selectedOpacity","hoverOpacity","expanded","selected","group","marginLeft","content","width","display","alignItems","cursor","iconContainer","marginRight","flexShrink","justifyContent","fontSize","label","paddingLeft","position","isPrintableCharacter","str","length","match","TreeItem","forwardRef","props","ref","children","classes","className","collapseIcon","endIcon","expandIcon","iconProp","icon","nodeId","onClick","onFocus","onKeyDown","onMouseDown","_props$TransitionComp","TransitionComponent","TransitionProps","other","_React$useContext","useContext","contextIcons","icons","focus","focusFirstNode","focusLastNode","focusNextNode","focusPreviousNode","focusByFirstCharacter","selectNode","selectRange","selectNextNode","selectPreviousNode","rangeSelectToFirst","rangeSelectToLast","selectAllNodes","expandAllSiblings","toggleExpansion","isExpanded","isFocused","isSelected","isTabbable","multiSelect","getParent","mapFirstChar","addNodeToNodeMap","removeNodeFromNodeMap","nodeRef","useRef","contentRef","handleRef","expandable","Boolean","Array","isArray","focused","tabbable","defaultExpandIcon","defaultCollapseIcon","defaultParentIcon","defaultEndIcon","handleClick","event","multiple","shiftKey","ctrlKey","metaKey","end","handleMouseDown","preventDefault","handleNextArrow","handlePreviousArrow","parent","handleKeyDown","flag","key","altKey","currentTarget","target","ctrlPressed","current","stopPropagation","direction","toLowerCase","handleFocus","useEffect","childIds","Children","forEach","child","isValidElement","push","undefined","textContent","substring","ariaSelected","createElement","role","tabIndex","component","unmountOnExit","in","process","env","NODE_ENV","propTypes","node","object","string","isRequired","func","elementType","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\n\r\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions  */\r\nimport * as React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { fade, withStyles, useTheme } from '@material-ui/core/styles';\r\nimport { useForkRef } from '@material-ui/core/utils';\r\nimport TreeViewContext from '../TreeView/TreeViewContext';\r\nexport var styles = function styles(theme) {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    root: {\r\n      listStyle: 'none',\r\n      margin: 0,\r\n      padding: 0,\r\n      outline: 0,\r\n      WebkitTapHighlightColor: 'transparent',\r\n      '&:focus > $content $label': {\r\n        backgroundColor: theme.palette.action.hover\r\n      },\r\n      '&$selected > $content $label': {\r\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity)\r\n      },\r\n      '&$selected > $content $label:hover, &$selected:focus > $content $label': {\r\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\r\n        // Reset on touch devices, it doesn't add specificity\r\n        '@media (hover: none)': {\r\n          backgroundColor: 'transparent'\r\n        }\r\n      }\r\n    },\r\n\r\n    /* Pseudo-class applied to the root element when expanded. */\r\n    expanded: {},\r\n\r\n    /* Pseudo-class applied to the root element when selected. */\r\n    selected: {},\r\n\r\n    /* Styles applied to the `role=\"group\"` element. */\r\n    group: {\r\n      margin: 0,\r\n      padding: 0,\r\n      marginLeft: 17\r\n    },\r\n\r\n    /* Styles applied to the tree node content. */\r\n    content: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      cursor: 'pointer'\r\n    },\r\n\r\n    /* Styles applied to the tree node icon and collapse/expand icon. */\r\n    iconContainer: {\r\n      marginRight: 4,\r\n      width: 15,\r\n      display: 'flex',\r\n      flexShrink: 0,\r\n      justifyContent: 'center',\r\n      '& svg': {\r\n        fontSize: 18\r\n      }\r\n    },\r\n\r\n    /* Styles applied to the label element. */\r\n    label: {\r\n      width: '100%',\r\n      paddingLeft: 4,\r\n      position: 'relative',\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.action.hover,\r\n        // Reset on touch devices, it doesn't add specificity\r\n        '@media (hover: none)': {\r\n          backgroundColor: 'transparent'\r\n        }\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nvar isPrintableCharacter = function isPrintableCharacter(str) {\r\n  return str && str.length === 1 && str.match(/\\S/);\r\n};\r\n\r\nvar TreeItem = React.forwardRef(function TreeItem(props, ref) {\r\n  var children = props.children,\r\n      classes = props.classes,\r\n      className = props.className,\r\n      collapseIcon = props.collapseIcon,\r\n      endIcon = props.endIcon,\r\n      expandIcon = props.expandIcon,\r\n      iconProp = props.icon,\r\n      label = props.label,\r\n      nodeId = props.nodeId,\r\n      onClick = props.onClick,\r\n      onFocus = props.onFocus,\r\n      onKeyDown = props.onKeyDown,\r\n      onMouseDown = props.onMouseDown,\r\n      _props$TransitionComp = props.TransitionComponent,\r\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\r\n      TransitionProps = props.TransitionProps,\r\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapseIcon\", \"endIcon\", \"expandIcon\", \"icon\", \"label\", \"nodeId\", \"onClick\", \"onFocus\", \"onKeyDown\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"]);\r\n\r\n  var _React$useContext = React.useContext(TreeViewContext),\r\n      contextIcons = _React$useContext.icons,\r\n      focus = _React$useContext.focus,\r\n      focusFirstNode = _React$useContext.focusFirstNode,\r\n      focusLastNode = _React$useContext.focusLastNode,\r\n      focusNextNode = _React$useContext.focusNextNode,\r\n      focusPreviousNode = _React$useContext.focusPreviousNode,\r\n      focusByFirstCharacter = _React$useContext.focusByFirstCharacter,\r\n      selectNode = _React$useContext.selectNode,\r\n      selectRange = _React$useContext.selectRange,\r\n      selectNextNode = _React$useContext.selectNextNode,\r\n      selectPreviousNode = _React$useContext.selectPreviousNode,\r\n      rangeSelectToFirst = _React$useContext.rangeSelectToFirst,\r\n      rangeSelectToLast = _React$useContext.rangeSelectToLast,\r\n      selectAllNodes = _React$useContext.selectAllNodes,\r\n      expandAllSiblings = _React$useContext.expandAllSiblings,\r\n      toggleExpansion = _React$useContext.toggleExpansion,\r\n      isExpanded = _React$useContext.isExpanded,\r\n      isFocused = _React$useContext.isFocused,\r\n      isSelected = _React$useContext.isSelected,\r\n      isTabbable = _React$useContext.isTabbable,\r\n      multiSelect = _React$useContext.multiSelect,\r\n      getParent = _React$useContext.getParent,\r\n      mapFirstChar = _React$useContext.mapFirstChar,\r\n      addNodeToNodeMap = _React$useContext.addNodeToNodeMap,\r\n      removeNodeFromNodeMap = _React$useContext.removeNodeFromNodeMap;\r\n\r\n  var nodeRef = React.useRef(null);\r\n  var contentRef = React.useRef(null);\r\n  var handleRef = useForkRef(nodeRef, ref);\r\n  var icon = iconProp;\r\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\r\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\r\n  var focused = isFocused ? isFocused(nodeId) : false;\r\n  var tabbable = isTabbable ? isTabbable(nodeId) : false;\r\n  var selected = isSelected ? isSelected(nodeId) : false;\r\n  var icons = contextIcons || {};\r\n  var theme = useTheme();\r\n\r\n  if (!icon) {\r\n    if (expandable) {\r\n      if (!expanded) {\r\n        icon = expandIcon || icons.defaultExpandIcon;\r\n      } else {\r\n        icon = collapseIcon || icons.defaultCollapseIcon;\r\n      }\r\n\r\n      if (!icon) {\r\n        icon = icons.defaultParentIcon;\r\n      }\r\n    } else {\r\n      icon = endIcon || icons.defaultEndIcon;\r\n    }\r\n  }\r\n\r\n  var handleClick = function handleClick(event) {\r\n    if (!focused) {\r\n      focus(nodeId);\r\n    }\r\n\r\n    var multiple = multiSelect && (event.shiftKey || event.ctrlKey || event.metaKey); // If already expanded and trying to toggle selection don't close\r\n\r\n    if (expandable && !(multiple && isExpanded(nodeId))) {\r\n      toggleExpansion(event, nodeId);\r\n    }\r\n\r\n    if (multiple) {\r\n      if (event.shiftKey) {\r\n        selectRange(event, {\r\n          end: nodeId\r\n        });\r\n      } else {\r\n        selectNode(event, nodeId, true);\r\n      }\r\n    } else {\r\n      selectNode(event, nodeId);\r\n    }\r\n\r\n    if (onClick) {\r\n      onClick(event);\r\n    }\r\n  };\r\n\r\n  var handleMouseDown = function handleMouseDown(event) {\r\n    if (event.shiftKey || event.ctrlKey || event.metaKey) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (onMouseDown) {\r\n      onMouseDown(event);\r\n    }\r\n  };\r\n\r\n  var handleNextArrow = function handleNextArrow(event) {\r\n    if (expandable) {\r\n      if (expanded) {\r\n        focusNextNode(nodeId);\r\n      } else {\r\n        toggleExpansion(event);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  var handlePreviousArrow = function handlePreviousArrow(event) {\r\n    if (expanded) {\r\n      toggleExpansion(event, nodeId);\r\n      return true;\r\n    }\r\n\r\n    var parent = getParent(nodeId);\r\n\r\n    if (parent) {\r\n      focus(parent);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  var handleKeyDown = function handleKeyDown(event) {\r\n    var flag = false;\r\n    var key = event.key;\r\n\r\n    if (event.altKey || event.currentTarget !== event.target) {\r\n      return;\r\n    }\r\n\r\n    var ctrlPressed = event.ctrlKey || event.metaKey;\r\n\r\n    switch (key) {\r\n      case ' ':\r\n        if (nodeRef.current === event.currentTarget) {\r\n          if (multiSelect && event.shiftKey) {\r\n            flag = selectRange(event, {\r\n              end: nodeId\r\n            });\r\n          } else if (multiSelect) {\r\n            flag = selectNode(event, nodeId, true);\r\n          } else {\r\n            flag = selectNode(event, nodeId);\r\n          }\r\n        }\r\n\r\n        event.stopPropagation();\r\n        break;\r\n\r\n      case 'Enter':\r\n        if (nodeRef.current === event.currentTarget && expandable) {\r\n          toggleExpansion(event);\r\n          flag = true;\r\n        }\r\n\r\n        event.stopPropagation();\r\n        break;\r\n\r\n      case 'ArrowDown':\r\n        if (multiSelect && event.shiftKey) {\r\n          selectNextNode(event, nodeId);\r\n        }\r\n\r\n        focusNextNode(nodeId);\r\n        flag = true;\r\n        break;\r\n\r\n      case 'ArrowUp':\r\n        if (multiSelect && event.shiftKey) {\r\n          selectPreviousNode(event, nodeId);\r\n        }\r\n\r\n        focusPreviousNode(nodeId);\r\n        flag = true;\r\n        break;\r\n\r\n      case 'ArrowRight':\r\n        if (theme.direction === 'rtl') {\r\n          flag = handlePreviousArrow(event);\r\n        } else {\r\n          flag = handleNextArrow(event);\r\n        }\r\n\r\n        break;\r\n\r\n      case 'ArrowLeft':\r\n        if (theme.direction === 'rtl') {\r\n          flag = handleNextArrow(event);\r\n        } else {\r\n          flag = handlePreviousArrow(event);\r\n        }\r\n\r\n        break;\r\n\r\n      case 'Home':\r\n        if (multiSelect && ctrlPressed && event.shiftKey) {\r\n          rangeSelectToFirst(event, nodeId);\r\n        }\r\n\r\n        focusFirstNode();\r\n        flag = true;\r\n        break;\r\n\r\n      case 'End':\r\n        if (multiSelect && ctrlPressed && event.shiftKey) {\r\n          rangeSelectToLast(event, nodeId);\r\n        }\r\n\r\n        focusLastNode();\r\n        flag = true;\r\n        break;\r\n\r\n      default:\r\n        if (key === '*') {\r\n          expandAllSiblings(event, nodeId);\r\n          flag = true;\r\n        } else if (multiSelect && ctrlPressed && key.toLowerCase() === 'a') {\r\n          flag = selectAllNodes(event);\r\n        } else if (!ctrlPressed && !event.shiftKey && isPrintableCharacter(key)) {\r\n          focusByFirstCharacter(nodeId, key);\r\n          flag = true;\r\n        }\r\n\r\n    }\r\n\r\n    if (flag) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    if (onKeyDown) {\r\n      onKeyDown(event);\r\n    }\r\n  };\r\n\r\n  var handleFocus = function handleFocus(event) {\r\n    if (!focused && event.currentTarget === event.target) {\r\n      focus(nodeId);\r\n    }\r\n\r\n    if (onFocus) {\r\n      onFocus(event);\r\n    }\r\n  };\r\n\r\n  React.useEffect(function () {\r\n    if (addNodeToNodeMap) {\r\n      var childIds = [];\r\n      React.Children.forEach(children, function (child) {\r\n        if (React.isValidElement(child) && child.props.nodeId) {\r\n          childIds.push(child.props.nodeId);\r\n        }\r\n      });\r\n      addNodeToNodeMap(nodeId, childIds);\r\n    }\r\n  }, [children, nodeId, addNodeToNodeMap]);\r\n  React.useEffect(function () {\r\n    if (removeNodeFromNodeMap) {\r\n      return function () {\r\n        removeNodeFromNodeMap(nodeId);\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }, [nodeId, removeNodeFromNodeMap]);\r\n  React.useEffect(function () {\r\n    if (mapFirstChar && label) {\r\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\r\n    }\r\n  }, [mapFirstChar, nodeId, label]);\r\n  React.useEffect(function () {\r\n    if (focused) {\r\n      nodeRef.current.focus();\r\n    }\r\n  }, [focused]);\r\n  var ariaSelected;\r\n\r\n  if (multiSelect) {\r\n    ariaSelected = selected;\r\n  } else if (selected) {\r\n    // single-selection trees unset aria-selected\r\n    ariaSelected = true;\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\r\n    className: clsx(classes.root, className, expanded && classes.expanded, selected && classes.selected),\r\n    role: \"treeitem\",\r\n    onKeyDown: handleKeyDown,\r\n    onFocus: handleFocus,\r\n    \"aria-expanded\": expandable ? expanded : null,\r\n    \"aria-selected\": ariaSelected,\r\n    ref: handleRef,\r\n    tabIndex: tabbable ? 0 : -1\r\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\r\n    className: classes.content,\r\n    onClick: handleClick,\r\n    onMouseDown: handleMouseDown,\r\n    ref: contentRef\r\n  }, /*#__PURE__*/React.createElement(\"div\", {\r\n    className: classes.iconContainer\r\n  }, icon), /*#__PURE__*/React.createElement(Typography, {\r\n    component: \"div\",\r\n    className: classes.label\r\n  }, label)), children && /*#__PURE__*/React.createElement(TransitionComponent, _extends({\r\n    unmountOnExit: true,\r\n    className: classes.group,\r\n    in: expanded,\r\n    component: \"ul\",\r\n    role: \"group\"\r\n  }, TransitionProps), children));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The icon used to collapse the node.\r\n   */\r\n  collapseIcon: PropTypes.node,\r\n\r\n  /**\r\n   * The icon displayed next to a end node.\r\n   */\r\n  endIcon: PropTypes.node,\r\n\r\n  /**\r\n   * The icon used to expand the node.\r\n   */\r\n  expandIcon: PropTypes.node,\r\n\r\n  /**\r\n   * The icon to display next to the tree node's label.\r\n   */\r\n  icon: PropTypes.node,\r\n\r\n  /**\r\n   * The tree node label.\r\n   */\r\n  label: PropTypes.node,\r\n\r\n  /**\r\n   * The id of the node.\r\n   */\r\n  nodeId: PropTypes.string.isRequired,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onClick: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onFocus: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onKeyDown: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onMouseDown: PropTypes.func,\r\n\r\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   */\r\n  TransitionComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\r\n   */\r\n  TransitionProps: PropTypes.object\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiTreeItem'\r\n})(TreeItem);"]},"metadata":{},"sourceType":"module"}