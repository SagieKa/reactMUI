{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Transactions\\\\reactMUI\\\\my-app\\\\src\\\\Components\\\\Form.js\";\nimport React from 'react';\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Grid } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport BasicDatePicker from './FormDate';\nimport UploadButtons from './FormUpload';\nimport SaveIcon from '@material-ui/icons/Save';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: 'white',\n    boxShadow: ' 0 4px 90px 0 rgba(0, 0, 0, 0.2)',\n    borderRadius: '60px',\n    marginTop: 20,\n    textAlign: 'center',\n    // direction: 'right',\n    marginBottom: 20,\n    '& .MuiTextField-root': {\n      margin: theme.spacing(2),\n      width: '20ch'\n    }\n  },\n  try: {\n    textAlign: 'right',\n    direction: 'right'\n  },\n  grid: {\n    marginBottom: 8 // direction: 'rtl',\n\n  },\n  end: {\n    margin: 5\n  }\n}));\nconst banks = [{\n  name: 'אוצר החייל'\n}, {\n  name: 'לאומי'\n}, {\n  name: 'בנק הפועלים'\n}];\nconst currencies = [{\n  value: 'ILS',\n  label: '₪',\n  id: '0'\n}, {\n  value: 'USD',\n  label: '$',\n  id: '01'\n}, {\n  value: 'EUR',\n  label: '€',\n  id: '27'\n}, {\n  value: 'GBP',\n  label: '£',\n  id: '02'\n}, {\n  value: 'JPY',\n  label: '¥',\n  id: '03'\n}];\nexport default function Form(props) {\n  const classes = useStyles();\n  const [amount, setAmount] = React.useState('0');\n  const [ilsAmount, setIlsAmount] = React.useState('0');\n  const [bank, setBank] = React.useState('אוצר החייל');\n  const [currency, setCurrency] = React.useState('ILS');\n  const [subject, setSubject] = React.useState('');\n  const [type, setType] = React.useState(props.type);\n  const [file, setFile] = React.useState('null');\n  const [timeHour, setTimeHour] = React.useState(new Date());\n  const [timeDate, setDate] = React.useState(new Date());\n  const [getDate, setGetDate] = React.useState('null');\n  const [idCurr, setIdCurr] = React.useState(0);\n  const [timeDateNow, setTimeDateNow] = React.useState(new Date());\n\n  const getDateToReq = item => {\n    var year = item.getFullYear().toString();\n    var month = item.getMonth() + 1;\n\n    if (month < 10) {\n      var newMonth = '0' + month.toString();\n    } else {\n      var newMonth = month.toString();\n    }\n\n    var day = item.getDate().toString();\n    var str = year + newMonth + day;\n    setGetDate(year + newMonth + day);\n    return str;\n  };\n\n  const getDateToReqChange = item => {\n    var year = item.getFullYear().toString();\n    var month = item.getMonth() + 1;\n\n    if (month < 10) {\n      var newMonth = '0' + month.toString();\n    } else {\n      var newMonth = month.toString();\n    }\n\n    var day = (item.getDate() - 1).toString();\n    var str = year + newMonth + day;\n    setGetDate(year + newMonth + day);\n    return str;\n  };\n\n  const updateFile = file => {\n    setFile(file);\n    return false;\n  };\n\n  const updateHour = hour => {\n    setTimeHour(hour.getHours());\n  };\n\n  const updateDate = item => {\n    setDate(item);\n  };\n\n  const updateDateNow = date => {\n    setTimeDateNow(date);\n  };\n\n  const findCurrID = name => {\n    if (name.value === currency) {\n      return name;\n    }\n  };\n\n  const handleCurrency = async event => {\n    setCurrency(event.target.value);\n    var id = currencies.find(curr => {\n      if (curr.value === event.target.value) {\n        return curr.id;\n      }\n    }).id;\n    setIdCurr(id);\n  };\n\n  const handleBank = event => {\n    setBank(event.target.value);\n  };\n\n  const handleAmount = event => {\n    setAmount(event.target.value);\n  };\n\n  const handleSubject = event => {\n    setSubject(event.target.value);\n  };\n\n  const handleType = event => {\n    setType(event.target.value);\n  };\n\n  const send = async event => {\n    var transaction; // console.log('tinedate-1:');\n    // console.log((timeDate).getDate());\n\n    var strDate = getDateToReq(timeDate);\n    console.log(strDate);\n\n    if (currency === 'ILS') {\n      setIlsAmount(amount);\n      transaction = {\n        amount: Number(amount),\n        ilsAmount: Number(amount),\n        currency: currency,\n        bank: bank,\n        subject: subject,\n        type: type,\n        timeDate: timeDate,\n        timeHour: timeHour,\n        timeDateNow: timeDateNow,\n        file: file\n      };\n    } else {\n      let requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      console.log('client currency:');\n      var resultRate = false;\n\n      while (!resultRate) {\n        var rate = await fetch(`http://localhost:8000/getCurrency/${strDate}/${idCurr}`, requestOptions).then(res => {\n          return res.json();\n        }).then(async data => {\n          console.log('you are in last then?');\n          console.log(data.result);\n          console.log(data.rate);\n          resultRate = data.result;\n          let newDate = new Date(timeDate.getFullYear(), timeDate.getMonth(), timeDate.getDate() - 1);\n          console.log(newDate);\n          setDate(newDate);\n          console.log(timeDate); // setTimeDate = newDate;\n\n          strDate = getDateToReq(newDate);\n          console.log(strDate);\n          return data.rate;\n        });\n      }\n\n      console.log('this is the rate:' + rate);\n      transaction = {\n        amount: Number(amount),\n        ilsAmount: (rate * Number(amount)).toFixed(2),\n        currency: currency,\n        bank: bank,\n        subject: subject,\n        type: type,\n        timeDate: timeDate,\n        timeHour: timeHour,\n        timeDateNow: timeDateNow,\n        file: file\n      };\n    }\n\n    let requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(transaction)\n    };\n    fetch('http://localhost:8000/saveData', requestOptions).then(res => {\n      // then print response status\n      console.log('sucsess');\n    });\n    props.getTrans(transaction);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    onSubmit: send,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-multiline-flexible\",\n    label: \"\\u05E1\\u05DB\\u05D5\\u05DD\",\n    multiline: true,\n    rowsMax: \"4\",\n    textAlign: \"center\",\n    value: amount,\n    className: classes.try,\n    onChange: handleAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    textAlign: \"right\",\n    id: \"standard-select-currency\",\n    select: true,\n    label: \"\\u05D1\\u05D7\\u05D9\\u05E8\\u05D4 \\u05DE\\u05D8\\u05D1\\u05E2\",\n    value: currency,\n    onChange: handleCurrency,\n    helperText: \"\\u05D1\\u05D7\\u05E8 \\u05D0\\u05EA \\u05D4\\u05DE\\u05D8\\u05D1\\u05E2 \\u05D4\\u05E8\\u05E6\\u05D5\\u05D9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, currencies.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 19\n    }\n  }, option.label))), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-select-currency\",\n    select: true,\n    label: \"\\u05D1\\u05D7\\u05E8 \\u05D1\\u05E0\\u05E7\",\n    value: bank,\n    onChange: handleBank,\n    helperText: \"\\u05D1\\u05D7\\u05E8 \\u05D0\\u05EA \\u05D4\\u05D1\\u05E0\\u05E7 \\u05D4\\u05E8\\u05E6\\u05D5\\u05D9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, banks.map(bank => /*#__PURE__*/React.createElement(MenuItem, {\n    key: bank.name,\n    value: bank.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }\n  }, bank.name))), /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-multiline-flexible\",\n    label: \"\\u05E8\\u05E9\\u05D5\\u05DD \\u05E0\\u05D5\\u05E9\\u05D0 \",\n    multiline: true,\n    onChange: handleSubject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    id: \"standard-multiline-flexible\",\n    label: \"\\u05E1\\u05D5\\u05D2 \\u05D8\\u05E8\\u05D6\\u05E0\\u05E7\\u05E6\\u05D9\\u05D4\",\n    multiline: true,\n    rowsMax: \"4\",\n    value: props.type,\n    onChange: handleType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BasicDatePicker, {\n    updateHour: updateHour,\n    updateDate: updateDate,\n    updateDateNow: updateDateNow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.end,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 28\n      }\n    }),\n    size: \"large\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      send();\n      return false;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }, \"\\u05D4\\u05D5\\u05E1\\u05E3 \\u05D8\\u05E8\\u05E0\\u05D6\\u05E7\\u05E6\\u05D9\\u05D4\")), /*#__PURE__*/React.createElement(UploadButtons, {\n    updateFile: updateFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.end,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["D:/React/Transactions/reactMUI/my-app/src/Components/Form.js"],"names":["React","makeStyles","withTheme","TextField","Grid","MenuItem","Button","BasicDatePicker","UploadButtons","SaveIcon","useStyles","theme","root","backgroundColor","boxShadow","borderRadius","marginTop","textAlign","marginBottom","margin","spacing","width","try","direction","grid","end","banks","name","currencies","value","label","id","Form","props","classes","amount","setAmount","useState","ilsAmount","setIlsAmount","bank","setBank","currency","setCurrency","subject","setSubject","type","setType","file","setFile","timeHour","setTimeHour","Date","timeDate","setDate","getDate","setGetDate","idCurr","setIdCurr","timeDateNow","setTimeDateNow","getDateToReq","item","year","getFullYear","toString","month","getMonth","newMonth","day","str","getDateToReqChange","updateFile","updateHour","hour","getHours","updateDate","updateDateNow","date","findCurrID","handleCurrency","event","target","find","curr","handleBank","handleAmount","handleSubject","handleType","send","transaction","strDate","console","log","Number","requestOptions","method","headers","resultRate","rate","fetch","then","res","json","data","result","newDate","toFixed","body","JSON","stringify","getTrans","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Grid } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport BasicDatePicker from './FormDate';\r\nimport UploadButtons from './FormUpload';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: 'white',\r\n    boxShadow: ' 0 4px 90px 0 rgba(0, 0, 0, 0.2)',\r\n    borderRadius: '60px',\r\n    marginTop: 20,\r\n    textAlign: 'center',\r\n    // direction: 'right',\r\n    marginBottom: 20,\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(2),\r\n      width: '20ch',\r\n    },\r\n  },\r\n  try: {\r\n    textAlign: 'right',\r\n    direction: 'right',\r\n  },\r\n  grid: {\r\n    marginBottom: 8,\r\n    // direction: 'rtl',\r\n  },\r\n  end: { margin: 5 },\r\n}));\r\n\r\nconst banks = [\r\n  {\r\n    name: 'אוצר החייל',\r\n  },\r\n  { name: 'לאומי' },\r\n  { name: 'בנק הפועלים' },\r\n];\r\nconst currencies = [\r\n  {\r\n    value: 'ILS',\r\n    label: '₪',\r\n    id: '0',\r\n  },\r\n  {\r\n    value: 'USD',\r\n    label: '$',\r\n    id: '01',\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    label: '€',\r\n    id: '27',\r\n  },\r\n  {\r\n    value: 'GBP',\r\n    label: '£',\r\n    id: '02',\r\n  },\r\n  {\r\n    value: 'JPY',\r\n    label: '¥',\r\n    id: '03',\r\n  },\r\n];\r\n\r\nexport default function Form(props) {\r\n  const classes = useStyles();\r\n  const [amount, setAmount] = React.useState('0');\r\n  const [ilsAmount, setIlsAmount] = React.useState('0');\r\n  const [bank, setBank] = React.useState('אוצר החייל');\r\n  const [currency, setCurrency] = React.useState('ILS');\r\n  const [subject, setSubject] = React.useState('');\r\n  const [type, setType] = React.useState(props.type);\r\n  const [file, setFile] = React.useState('null');\r\n  const [timeHour, setTimeHour] = React.useState(new Date());\r\n  const [timeDate, setDate] = React.useState(new Date());\r\n  const [getDate, setGetDate] = React.useState('null');\r\n  const [idCurr, setIdCurr] = React.useState(0);\r\n  const [timeDateNow, setTimeDateNow] = React.useState(new Date());\r\n\r\n  const getDateToReq = (item) => {\r\n    var year = item.getFullYear().toString();\r\n    var month = item.getMonth() + 1;\r\n    if (month < 10) {\r\n      var newMonth = '0' + month.toString();\r\n    } else {\r\n      var newMonth = month.toString();\r\n    }\r\n    var day = item.getDate().toString();\r\n    var str = year + newMonth + day;\r\n    setGetDate(year + newMonth + day);\r\n    return str;\r\n  };\r\n  const getDateToReqChange = (item) => {\r\n    var year = item.getFullYear().toString();\r\n    var month = item.getMonth() + 1;\r\n    if (month < 10) {\r\n      var newMonth = '0' + month.toString();\r\n    } else {\r\n      var newMonth = month.toString();\r\n    }\r\n    var day = (item.getDate() - 1).toString();\r\n    var str = year + newMonth + day;\r\n    setGetDate(year + newMonth + day);\r\n    return str;\r\n  };\r\n  const updateFile = (file) => {\r\n    setFile(file);\r\n    return false;\r\n  };\r\n  const updateHour = (hour) => {\r\n    setTimeHour(hour.getHours());\r\n  };\r\n  const updateDate = (item) => {\r\n    setDate(item);\r\n  };\r\n  const updateDateNow = (date) => {\r\n    setTimeDateNow(date);\r\n  };\r\n  const findCurrID = (name) => {\r\n    if (name.value === currency) {\r\n      return name;\r\n    }\r\n  };\r\n  const handleCurrency = async (event) => {\r\n    setCurrency(event.target.value);\r\n    var id = currencies.find((curr) => {\r\n      if (curr.value === event.target.value) {\r\n        return curr.id;\r\n      }\r\n    }).id;\r\n    setIdCurr(id);\r\n  };\r\n  const handleBank = (event) => {\r\n    setBank(event.target.value);\r\n  };\r\n  const handleAmount = (event) => {\r\n    setAmount(event.target.value);\r\n  };\r\n  const handleSubject = (event) => {\r\n    setSubject(event.target.value);\r\n  };\r\n  const handleType = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  const send = async (event) => {\r\n    var transaction;\r\n    // console.log('tinedate-1:');\r\n    // console.log((timeDate).getDate());\r\n    var strDate = getDateToReq(timeDate);\r\n    console.log(strDate);\r\n\r\n    if (currency === 'ILS') {\r\n      setIlsAmount(amount);\r\n      transaction = {\r\n        amount: Number(amount),\r\n        ilsAmount: Number(amount),\r\n        currency: currency,\r\n        bank: bank,\r\n        subject: subject,\r\n        type: type,\r\n        timeDate: timeDate,\r\n        timeHour: timeHour,\r\n        timeDateNow: timeDateNow,\r\n        file: file,\r\n      };\r\n    } else {\r\n      let requestOptions = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n      };\r\n      console.log('client currency:');\r\n\r\n      var resultRate = false;\r\n\r\n      while (!resultRate) {\r\n        var rate = await fetch(\r\n          `http://localhost:8000/getCurrency/${strDate}/${idCurr}`,\r\n          requestOptions\r\n        )\r\n          .then((res) => {\r\n            return res.json();\r\n          })\r\n          .then(async (data) => {\r\n            console.log('you are in last then?');\r\n            console.log(data.result);\r\n            console.log(data.rate);\r\n            resultRate = data.result;\r\n            let newDate = new Date(\r\n              timeDate.getFullYear(),\r\n              timeDate.getMonth(),\r\n              timeDate.getDate() - 1\r\n            );\r\n            console.log(newDate);\r\n            setDate(newDate);\r\n            console.log(timeDate);\r\n            // setTimeDate = newDate;\r\n            strDate = getDateToReq(newDate);\r\n            console.log(strDate);\r\n\r\n            return data.rate;\r\n          });\r\n      }\r\n\r\n      console.log('this is the rate:' + rate);\r\n\r\n      transaction = {\r\n        amount: Number(amount),\r\n        ilsAmount: (rate * Number(amount)).toFixed(2),\r\n        currency: currency,\r\n        bank: bank,\r\n        subject: subject,\r\n        type: type,\r\n        timeDate: timeDate,\r\n        timeHour: timeHour,\r\n        timeDateNow: timeDateNow,\r\n        file: file,\r\n      };\r\n    }\r\n    let requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(transaction),\r\n    };\r\n    fetch('http://localhost:8000/saveData', requestOptions).then((res) => {\r\n      // then print response status\r\n      console.log('sucsess');\r\n    });\r\n    props.getTrans(transaction);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.grid}>\r\n      <Grid item xs={1} />\r\n      <Grid item xs={10}>\r\n        <form\r\n          className={classes.root}\r\n          noValidate\r\n          onSubmit={send}\r\n          autoComplete='off'\r\n        >\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <TextField\r\n                id='standard-multiline-flexible'\r\n                label='סכום'\r\n                multiline\r\n                rowsMax='4'\r\n                textAlign='center'\r\n                value={amount}\r\n                className={classes.try}\r\n                onChange={handleAmount}\r\n              />\r\n              <TextField\r\n                textAlign='right'\r\n                id='standard-select-currency'\r\n                select\r\n                label='בחירה מטבע'\r\n                value={currency}\r\n                onChange={handleCurrency}\r\n                helperText='בחר את המטבע הרצוי'\r\n              >\r\n                {currencies.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id='standard-select-currency'\r\n                select\r\n                label='בחר בנק'\r\n                value={bank}\r\n                onChange={handleBank}\r\n                helperText='בחר את הבנק הרצוי'\r\n              >\r\n                {banks.map((bank) => (\r\n                  <MenuItem key={bank.name} value={bank.name}>\r\n                    {bank.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <TextField\r\n                id='standard-multiline-flexible'\r\n                label='רשום נושא '\r\n                multiline\r\n                onChange={handleSubject}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <TextField\r\n                disabled\r\n                id='standard-multiline-flexible'\r\n                label='סוג טרזנקציה'\r\n                multiline\r\n                rowsMax='4'\r\n                value={props.type}\r\n                onChange={handleType}\r\n              />\r\n              {/* <BasicDatePicker /> */}\r\n              <BasicDatePicker\r\n                updateHour={updateHour}\r\n                updateDate={updateDate}\r\n                updateDateNow={updateDateNow}\r\n              />\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid container className={classes.end}>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={5}>\r\n              <Button\r\n                startIcon={<SaveIcon />}\r\n                size='large'\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={() => {\r\n                  send();\r\n                  return false;\r\n                }}\r\n              >\r\n                הוסף טרנזקציה\r\n              </Button>\r\n            </Grid>\r\n            <UploadButtons updateFile={updateFile} />\r\n            <Grid item xs={1}></Grid>\r\n          </Grid>\r\n          <Grid container className={classes.end}></Grid>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}