{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactMUI\\\\reactMUI\\\\my-app\\\\src\\\\Components\\\\DisplayTable.js\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport result from './DB'; // import columns from './DB';\n\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: result[1],\n    data: result[0]\n  });\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Transactions\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["D:/reactMUI/reactMUI/my-app/src/Components/DisplayTable.js"],"names":["React","MaterialTable","result","MaterialTableDemo","state","setState","useState","columns","data","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,MAAnB,C,CACA;;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAe;AACvCC,IAAAA,OAAO,EAAEL,MAAM,CAAC,CAAD,CADwB;AAEvCM,IAAAA,IAAI,EAAEN,MAAM,CAAC,CAAD;AAF2B,GAAf,CAA1B;AAKA,sBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,OAAO,EAAEE,KAAK,CAACG,OAFjB;AAGE,IAAA,IAAI,EAAEH,KAAK,CAACI,IAHd;AAIE,IAAA,QAAQ,EAAE;AACRC,MAAAA,QAAQ,EAAEC,OAAO,IACf,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACPP,UAAAA,QAAQ,CAACS,SAAS,IAAI;AACpB,kBAAMN,IAAI,GAAG,CAAC,GAAGM,SAAS,CAACN,IAAd,CAAb;AACAA,YAAAA,IAAI,CAACO,IAAL,CAAUL,OAAV;AACA,mBAAO,EAAE,GAAGI,SAAL;AAAgBN,cAAAA;AAAhB,aAAP;AACD,WAJO,CAAR;AAKD,SAPS,EAOP,GAPO,CAAV;AAQD,OATD,CAFM;AAYRQ,MAAAA,WAAW,EAAE,CAACN,OAAD,EAAUO,OAAV,KACX,IAAIN,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;;AACP,cAAIK,OAAJ,EAAa;AACXZ,YAAAA,QAAQ,CAACS,SAAS,IAAI;AACpB,oBAAMN,IAAI,GAAG,CAAC,GAAGM,SAAS,CAACN,IAAd,CAAb;AACAA,cAAAA,IAAI,CAACA,IAAI,CAACU,OAAL,CAAaD,OAAb,CAAD,CAAJ,GAA8BP,OAA9B;AACA,qBAAO,EAAE,GAAGI,SAAL;AAAgBN,gBAAAA;AAAhB,eAAP;AACD,aAJO,CAAR;AAKD;AACF,SATS,EASP,GATO,CAAV;AAUD,OAXD,CAbM;AAyBRW,MAAAA,WAAW,EAAEF,OAAO,IAClB,IAAIN,OAAJ,CAAYC,OAAO,IAAI;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACPP,UAAAA,QAAQ,CAACS,SAAS,IAAI;AACpB,kBAAMN,IAAI,GAAG,CAAC,GAAGM,SAAS,CAACN,IAAd,CAAb;AACAA,YAAAA,IAAI,CAACY,MAAL,CAAYZ,IAAI,CAACU,OAAL,CAAaD,OAAb,CAAZ,EAAmC,CAAnC;AACA,mBAAO,EAAE,GAAGH,SAAL;AAAgBN,cAAAA;AAAhB,aAAP;AACD,WAJO,CAAR;AAKD,SAPS,EAOP,GAPO,CAAV;AAQD,OATD;AA1BM,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA4CD","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport result from './DB';\r\n// import columns from './DB';\r\n\r\nexport default function MaterialTableDemo() {\r\n  const [state, setState] = React.useState({\r\n    columns: result[1],\r\n    data: result[0]\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      title='Transactions'\r\n      columns={state.columns}\r\n      data={state.data}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState(prevState => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          })\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}